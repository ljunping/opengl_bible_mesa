Terminals unused in grammar

    IMAGE1DSHADOW
    IMAGE2DSHADOW
    IMAGE1DARRAYSHADOW
    IMAGE2DARRAYSHADOW
    SUPERP
    LINE
    INTERFACE_TOK
    OUTPUT
    ASM
    CLASS
    UNION
    ENUM
    TYPEDEF
    TEMPLATE
    THIS
    GOTO
    INLINE_TOK
    NOINLINE
    PUBLIC_TOK
    STATIC
    EXTERN
    EXTERNAL
    LONG_TOK
    SHORT_TOK
    HALF
    FIXED_TOK
    INPUT_TOK
    HVEC2
    HVEC3
    HVEC4
    FVEC2
    FVEC3
    FVEC4
    SAMPLER3DRECT
    SIZEOF
    CAST
    NAMESPACE
    USING
    RESOURCE
    ERROR_TOK
    COMMON
    PARTITION
    ACTIVE
    FILTER


Grammar

    0 $accept: translation_unit $end

    1 $@1: ε

    2 translation_unit: version_statement extension_statement_list $@1 external_declaration_list

    3 version_statement: ε
    4                  | VERSION_TOK INTCONSTANT EOL
    5                  | VERSION_TOK INTCONSTANT any_identifier EOL

    6 pragma_statement: PRAGMA_DEBUG_ON EOL
    7                 | PRAGMA_DEBUG_OFF EOL
    8                 | PRAGMA_OPTIMIZE_ON EOL
    9                 | PRAGMA_OPTIMIZE_OFF EOL
   10                 | PRAGMA_INVARIANT_ALL EOL
   11                 | PRAGMA_WARNING_ON EOL
   12                 | PRAGMA_WARNING_OFF EOL

   13 extension_statement_list: ε
   14                         | extension_statement_list extension_statement

   15 any_identifier: IDENTIFIER
   16               | TYPE_IDENTIFIER
   17               | NEW_IDENTIFIER

   18 extension_statement: EXTENSION any_identifier COLON any_identifier EOL

   19 external_declaration_list: external_declaration
   20                          | external_declaration_list external_declaration
   21                          | external_declaration_list extension_statement

   22 variable_identifier: IDENTIFIER
   23                    | NEW_IDENTIFIER

   24 primary_expression: variable_identifier
   25                   | INTCONSTANT
   26                   | UINTCONSTANT
   27                   | INT64CONSTANT
   28                   | UINT64CONSTANT
   29                   | FLOAT16CONSTANT
   30                   | FLOATCONSTANT
   31                   | DOUBLECONSTANT
   32                   | BOOLCONSTANT
   33                   | '(' expression ')'

   34 postfix_expression: primary_expression
   35                   | postfix_expression '[' integer_expression ']'
   36                   | function_call
   37                   | postfix_expression DOT_TOK FIELD_SELECTION
   38                   | postfix_expression INC_OP
   39                   | postfix_expression DEC_OP

   40 integer_expression: expression

   41 function_call: function_call_or_method

   42 function_call_or_method: function_call_generic

   43 function_call_generic: function_call_header_with_parameters ')'
   44                      | function_call_header_no_parameters ')'

   45 function_call_header_no_parameters: function_call_header VOID_TOK
   46                                   | function_call_header

   47 function_call_header_with_parameters: function_call_header assignment_expression
   48                                     | function_call_header_with_parameters ',' assignment_expression

   49 function_call_header: function_identifier '('

   50 function_identifier: type_specifier
   51                    | postfix_expression

   52 unary_expression: postfix_expression
   53                 | INC_OP unary_expression
   54                 | DEC_OP unary_expression
   55                 | unary_operator unary_expression

   56 unary_operator: '+'
   57               | '-'
   58               | '!'
   59               | '~'

   60 multiplicative_expression: unary_expression
   61                          | multiplicative_expression '*' unary_expression
   62                          | multiplicative_expression '/' unary_expression
   63                          | multiplicative_expression '%' unary_expression

   64 additive_expression: multiplicative_expression
   65                    | additive_expression '+' multiplicative_expression
   66                    | additive_expression '-' multiplicative_expression

   67 shift_expression: additive_expression
   68                 | shift_expression LEFT_OP additive_expression
   69                 | shift_expression RIGHT_OP additive_expression

   70 relational_expression: shift_expression
   71                      | relational_expression '<' shift_expression
   72                      | relational_expression '>' shift_expression
   73                      | relational_expression LE_OP shift_expression
   74                      | relational_expression GE_OP shift_expression

   75 equality_expression: relational_expression
   76                    | equality_expression EQ_OP relational_expression
   77                    | equality_expression NE_OP relational_expression

   78 and_expression: equality_expression
   79               | and_expression '&' equality_expression

   80 exclusive_or_expression: and_expression
   81                        | exclusive_or_expression '^' and_expression

   82 inclusive_or_expression: exclusive_or_expression
   83                        | inclusive_or_expression '|' exclusive_or_expression

   84 logical_and_expression: inclusive_or_expression
   85                       | logical_and_expression AND_OP inclusive_or_expression

   86 logical_xor_expression: logical_and_expression
   87                       | logical_xor_expression XOR_OP logical_and_expression

   88 logical_or_expression: logical_xor_expression
   89                      | logical_or_expression OR_OP logical_xor_expression

   90 conditional_expression: logical_or_expression
   91                       | logical_or_expression '?' expression ':' assignment_expression

   92 assignment_expression: conditional_expression
   93                      | unary_expression assignment_operator assignment_expression

   94 assignment_operator: '='
   95                    | MUL_ASSIGN
   96                    | DIV_ASSIGN
   97                    | MOD_ASSIGN
   98                    | ADD_ASSIGN
   99                    | SUB_ASSIGN
  100                    | LEFT_ASSIGN
  101                    | RIGHT_ASSIGN
  102                    | AND_ASSIGN
  103                    | XOR_ASSIGN
  104                    | OR_ASSIGN

  105 expression: assignment_expression
  106           | expression ',' assignment_expression

  107 constant_expression: conditional_expression

  108 declaration: function_prototype ';'
  109            | init_declarator_list ';'
  110            | PRECISION precision_qualifier type_specifier ';'
  111            | interface_block

  112 function_prototype: function_declarator ')'

  113 function_declarator: function_header
  114                    | function_header_with_parameters

  115 function_header_with_parameters: function_header parameter_declaration
  116                                | function_header_with_parameters ',' parameter_declaration

  117 function_header: fully_specified_type variable_identifier '('

  118 parameter_declarator: type_specifier any_identifier
  119                     | layout_qualifier type_specifier any_identifier
  120                     | type_specifier any_identifier array_specifier

  121 parameter_declaration: parameter_qualifier parameter_declarator
  122                      | parameter_qualifier parameter_type_specifier

  123 parameter_qualifier: ε
  124                    | CONST_TOK parameter_qualifier
  125                    | PRECISE parameter_qualifier
  126                    | parameter_direction_qualifier parameter_qualifier
  127                    | precision_qualifier parameter_qualifier
  128                    | memory_qualifier parameter_qualifier

  129 parameter_direction_qualifier: IN_TOK
  130                              | OUT_TOK
  131                              | INOUT_TOK

  132 parameter_type_specifier: type_specifier

  133 init_declarator_list: single_declaration
  134                     | init_declarator_list ',' any_identifier
  135                     | init_declarator_list ',' any_identifier array_specifier
  136                     | init_declarator_list ',' any_identifier array_specifier '=' initializer
  137                     | init_declarator_list ',' any_identifier '=' initializer

  138 single_declaration: fully_specified_type
  139                   | fully_specified_type any_identifier
  140                   | fully_specified_type any_identifier array_specifier
  141                   | fully_specified_type any_identifier array_specifier '=' initializer
  142                   | fully_specified_type any_identifier '=' initializer
  143                   | INVARIANT variable_identifier
  144                   | PRECISE variable_identifier

  145 fully_specified_type: type_specifier
  146                     | type_qualifier type_specifier

  147 layout_qualifier: LAYOUT_TOK '(' layout_qualifier_id_list ')'

  148 layout_qualifier_id_list: layout_qualifier_id
  149                         | layout_qualifier_id_list ',' layout_qualifier_id

  150 layout_qualifier_id: any_identifier
  151                    | any_identifier '=' constant_expression
  152                    | interface_block_layout_qualifier

  153 interface_block_layout_qualifier: ROW_MAJOR
  154                                 | PACKED_TOK
  155                                 | SHARED

  156 subroutine_qualifier: SUBROUTINE
  157                     | SUBROUTINE '(' subroutine_type_list ')'

  158 subroutine_type_list: any_identifier
  159                     | subroutine_type_list ',' any_identifier

  160 interpolation_qualifier: SMOOTH
  161                        | FLAT
  162                        | NOPERSPECTIVE

  163 type_qualifier: INVARIANT
  164               | PRECISE
  165               | auxiliary_storage_qualifier
  166               | storage_qualifier
  167               | interpolation_qualifier
  168               | layout_qualifier
  169               | memory_qualifier
  170               | subroutine_qualifier
  171               | precision_qualifier
  172               | PRECISE type_qualifier
  173               | INVARIANT type_qualifier
  174               | interpolation_qualifier type_qualifier
  175               | layout_qualifier type_qualifier
  176               | subroutine_qualifier type_qualifier
  177               | auxiliary_storage_qualifier type_qualifier
  178               | storage_qualifier type_qualifier
  179               | precision_qualifier type_qualifier
  180               | memory_qualifier type_qualifier

  181 auxiliary_storage_qualifier: CENTROID
  182                            | SAMPLE
  183                            | PATCH

  184 storage_qualifier: CONST_TOK
  185                  | ATTRIBUTE
  186                  | VARYING
  187                  | IN_TOK
  188                  | OUT_TOK
  189                  | INOUT_TOK
  190                  | UNIFORM
  191                  | BUFFER
  192                  | SHARED

  193 memory_qualifier: COHERENT
  194                 | VOLATILE
  195                 | RESTRICT
  196                 | READONLY
  197                 | WRITEONLY

  198 array_specifier: '[' ']'
  199                | '[' constant_expression ']'
  200                | array_specifier '[' ']'
  201                | array_specifier '[' constant_expression ']'

  202 type_specifier: type_specifier_nonarray
  203               | type_specifier_nonarray array_specifier

  204 type_specifier_nonarray: basic_type_specifier_nonarray
  205                        | struct_specifier
  206                        | TYPE_IDENTIFIER

  207 basic_type_specifier_nonarray: VOID_TOK
  208                              | BASIC_TYPE_TOK
  209                              | UNSIGNED BASIC_TYPE_TOK

  210 precision_qualifier: HIGHP
  211                    | MEDIUMP
  212                    | LOWP

  213 struct_specifier: STRUCT any_identifier '{' struct_declaration_list '}'
  214                 | STRUCT '{' struct_declaration_list '}'

  215 struct_declaration_list: struct_declaration
  216                        | struct_declaration_list struct_declaration

  217 struct_declaration: fully_specified_type struct_declarator_list ';'

  218 struct_declarator_list: struct_declarator
  219                       | struct_declarator_list ',' struct_declarator

  220 struct_declarator: any_identifier
  221                  | any_identifier array_specifier

  222 initializer: assignment_expression
  223            | '{' initializer_list '}'
  224            | '{' initializer_list ',' '}'

  225 initializer_list: initializer
  226                 | initializer_list ',' initializer

  227 declaration_statement: declaration

  228 statement: compound_statement
  229          | simple_statement

  230 simple_statement: declaration_statement
  231                 | expression_statement
  232                 | selection_statement
  233                 | switch_statement
  234                 | iteration_statement
  235                 | jump_statement
  236                 | demote_statement

  237 compound_statement: '{' '}'

  238 $@2: ε

  239 compound_statement: '{' $@2 statement_list '}'

  240 statement_no_new_scope: compound_statement_no_new_scope
  241                       | simple_statement

  242 compound_statement_no_new_scope: '{' '}'
  243                                | '{' statement_list '}'

  244 statement_list: statement
  245               | statement_list statement
  246               | statement_list extension_statement

  247 expression_statement: ';'
  248                     | expression ';'

  249 selection_statement: IF '(' expression ')' selection_rest_statement

  250 selection_rest_statement: statement ELSE statement
  251                         | statement

  252 condition: expression
  253          | fully_specified_type any_identifier '=' initializer

  254 switch_statement: SWITCH '(' expression ')' switch_body

  255 switch_body: '{' '}'
  256            | '{' case_statement_list '}'

  257 case_label: CASE expression ':'
  258           | DEFAULT ':'

  259 case_label_list: case_label
  260                | case_label_list case_label

  261 case_statement: case_label_list statement
  262               | case_statement statement

  263 case_statement_list: case_statement
  264                    | case_statement_list case_statement

  265 iteration_statement: WHILE '(' condition ')' statement_no_new_scope
  266                    | DO statement_no_new_scope WHILE '(' expression ')' ';'
  267                    | FOR '(' for_init_statement for_rest_statement ')' statement_no_new_scope

  268 for_init_statement: expression_statement
  269                   | declaration_statement

  270 conditionopt: condition
  271             | ε

  272 for_rest_statement: conditionopt ';'
  273                   | conditionopt ';' expression

  274 jump_statement: CONTINUE ';'
  275               | BREAK ';'
  276               | RETURN ';'
  277               | RETURN expression ';'
  278               | DISCARD ';'

  279 demote_statement: DEMOTE ';'

  280 external_declaration: function_definition
  281                     | declaration
  282                     | pragma_statement
  283                     | layout_defaults
  284                     | ';'

  285 function_definition: function_prototype compound_statement_no_new_scope

  286 interface_block: basic_interface_block
  287                | layout_qualifier interface_block
  288                | memory_qualifier interface_block

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' member_list '}' instance_name_opt ';'

  290 interface_qualifier: IN_TOK
  291                    | OUT_TOK
  292                    | UNIFORM
  293                    | BUFFER
  294                    | auxiliary_storage_qualifier interface_qualifier

  295 instance_name_opt: ε
  296                  | NEW_IDENTIFIER
  297                  | NEW_IDENTIFIER array_specifier

  298 member_list: member_declaration
  299            | member_declaration member_list

  300 member_declaration: fully_specified_type struct_declarator_list ';'

  301 layout_uniform_defaults: layout_qualifier layout_uniform_defaults
  302                        | layout_qualifier UNIFORM ';'

  303 layout_buffer_defaults: layout_qualifier layout_buffer_defaults
  304                       | layout_qualifier BUFFER ';'

  305 layout_in_defaults: layout_qualifier layout_in_defaults
  306                   | layout_qualifier IN_TOK ';'

  307 layout_out_defaults: layout_qualifier layout_out_defaults
  308                    | layout_qualifier OUT_TOK ';'

  309 layout_defaults: layout_uniform_defaults
  310                | layout_buffer_defaults
  311                | layout_in_defaults
  312                | layout_out_defaults


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 58
    '%' (37) 63
    '&' (38) 79
    '(' (40) 33 49 117 147 157 249 254 265 266 267
    ')' (41) 33 43 44 112 147 157 249 254 265 266 267
    '*' (42) 61
    '+' (43) 56 65
    ',' (44) 48 106 116 134 135 136 137 149 159 219 224 226
    '-' (45) 57 66
    '/' (47) 62
    ':' (58) 91 257 258
    ';' (59) 108 109 110 217 247 248 266 272 273 274 275 276 277 278 279 284 289 300 302 304 306 308
    '<' (60) 71
    '=' (61) 94 136 137 141 142 151 253
    '>' (62) 72
    '?' (63) 91
    '[' (91) 35 198 199 200 201
    ']' (93) 35 198 199 200 201
    '^' (94) 81
    '{' (123) 213 214 223 224 237 239 242 243 255 256 289
    '|' (124) 83
    '}' (125) 213 214 223 224 237 239 242 243 255 256 289
    '~' (126) 59
    error (256)
    ATTRIBUTE (258) 185
    CONST_TOK (259) 124 184
    BASIC_TYPE_TOK <type> (260) 208 209
    BREAK (261) 275
    BUFFER (262) 191 293 304
    CONTINUE (263) 274
    DO (264) 266
    ELSE (265) 250
    FOR (266) 267
    IF (267) 249
    DEMOTE (268) 279
    DISCARD (269) 278
    RETURN (270) 276 277
    SWITCH (271) 254
    CASE (272) 257
    DEFAULT (273) 258
    CENTROID (274) 181
    IN_TOK (275) 129 187 290 306
    OUT_TOK (276) 130 188 291 308
    INOUT_TOK (277) 131 189
    UNIFORM (278) 190 292 302
    VARYING (279) 186
    SAMPLE (280) 182
    NOPERSPECTIVE (281) 162
    FLAT (282) 161
    SMOOTH (283) 160
    IMAGE1DSHADOW (284)
    IMAGE2DSHADOW (285)
    IMAGE1DARRAYSHADOW (286)
    IMAGE2DARRAYSHADOW (287)
    COHERENT (288) 193
    VOLATILE (289) 194
    RESTRICT (290) 195
    READONLY (291) 196
    WRITEONLY (292) 197
    SHARED (293) 155 192
    STRUCT (294) 213 214
    VOID_TOK (295) 45 207
    WHILE (296) 265 266
    IDENTIFIER <identifier> (297) 15 22
    TYPE_IDENTIFIER <identifier> (298) 16 206
    NEW_IDENTIFIER <identifier> (299) 17 23 289 296 297
    FLOATCONSTANT <real> (300) 30
    FLOAT16CONSTANT <real> (301) 29
    DOUBLECONSTANT <dreal> (302) 31
    INTCONSTANT <n> (303) 4 5 25
    UINTCONSTANT <n> (304) 26
    BOOLCONSTANT <n> (305) 32
    INT64CONSTANT <n64> (306) 27
    UINT64CONSTANT <n64> (307) 28
    FIELD_SELECTION <identifier> (308) 37
    LEFT_OP (309) 68
    RIGHT_OP (310) 69
    INC_OP (311) 38 53
    DEC_OP (312) 39 54
    LE_OP (313) 73
    GE_OP (314) 74
    EQ_OP (315) 76
    NE_OP (316) 77
    AND_OP (317) 85
    OR_OP (318) 89
    XOR_OP (319) 87
    MUL_ASSIGN (320) 95
    DIV_ASSIGN (321) 96
    ADD_ASSIGN (322) 98
    MOD_ASSIGN (323) 97
    LEFT_ASSIGN (324) 100
    RIGHT_ASSIGN (325) 101
    AND_ASSIGN (326) 102
    XOR_ASSIGN (327) 103
    OR_ASSIGN (328) 104
    SUB_ASSIGN (329) 99
    INVARIANT (330) 143 163 173
    PRECISE (331) 125 144 164 172
    LOWP (332) 212
    MEDIUMP (333) 211
    HIGHP (334) 210
    SUPERP (335)
    PRECISION (336) 110
    VERSION_TOK (337) 4 5
    EXTENSION (338) 18
    LINE (339)
    COLON (340) 18
    EOL (341) 4 5 6 7 8 9 10 11 12 18
    INTERFACE_TOK (342)
    OUTPUT (343)
    PRAGMA_DEBUG_ON (344) 6
    PRAGMA_DEBUG_OFF (345) 7
    PRAGMA_OPTIMIZE_ON (346) 8
    PRAGMA_OPTIMIZE_OFF (347) 9
    PRAGMA_WARNING_ON (348) 11
    PRAGMA_WARNING_OFF (349) 12
    PRAGMA_INVARIANT_ALL (350) 10
    LAYOUT_TOK (351) 147
    DOT_TOK (352) 37
    ASM (353)
    CLASS (354)
    UNION (355)
    ENUM (356)
    TYPEDEF (357)
    TEMPLATE (358)
    THIS (359)
    PACKED_TOK (360) 154
    GOTO (361)
    INLINE_TOK (362)
    NOINLINE (363)
    PUBLIC_TOK (364)
    STATIC (365)
    EXTERN (366)
    EXTERNAL (367)
    LONG_TOK (368)
    SHORT_TOK (369)
    HALF (370)
    FIXED_TOK (371)
    UNSIGNED (372) 209
    INPUT_TOK (373)
    HVEC2 (374)
    HVEC3 (375)
    HVEC4 (376)
    FVEC2 (377)
    FVEC3 (378)
    FVEC4 (379)
    SAMPLER3DRECT (380)
    SIZEOF (381)
    CAST (382)
    NAMESPACE (383)
    USING (384)
    RESOURCE (385)
    PATCH (386) 183
    SUBROUTINE (387) 156 157
    ERROR_TOK (388)
    COMMON (389)
    PARTITION (390)
    ACTIVE (391)
    FILTER (392)
    ROW_MAJOR (393) 153
    THEN (394)


Nonterminals, with rules where they appear

    $accept (163)
        on left: 0
    translation_unit (164)
        on left: 2
        on right: 0
    $@1 (165)
        on left: 1
        on right: 2
    version_statement (166)
        on left: 3 4 5
        on right: 2
    pragma_statement <node> (167)
        on left: 6 7 8 9 10 11 12
        on right: 282
    extension_statement_list (168)
        on left: 13 14
        on right: 2 14
    any_identifier <identifier> (169)
        on left: 15 16 17
        on right: 5 18 118 119 120 134 135 136 137 139 140 141 142 150 151 158 159 213 220 221 253
    extension_statement (170)
        on left: 18
        on right: 14 21 246
    external_declaration_list (171)
        on left: 19 20 21
        on right: 2 20 21
    variable_identifier <identifier> (172)
        on left: 22 23
        on right: 24 117 143 144
    primary_expression <expression> (173)
        on left: 24 25 26 27 28 29 30 31 32 33
        on right: 34
    postfix_expression <expression> (174)
        on left: 34 35 36 37 38 39
        on right: 35 37 38 39 51 52
    integer_expression <expression> (175)
        on left: 40
        on right: 35
    function_call <expression> (176)
        on left: 41
        on right: 36
    function_call_or_method <expression> (177)
        on left: 42
        on right: 41
    function_call_generic <expression> (178)
        on left: 43 44
        on right: 42
    function_call_header_no_parameters <expression> (179)
        on left: 45 46
        on right: 44
    function_call_header_with_parameters <expression> (180)
        on left: 47 48
        on right: 43 48
    function_call_header <expression> (181)
        on left: 49
        on right: 45 46 47
    function_identifier <expression> (182)
        on left: 50 51
        on right: 49
    unary_expression <expression> (183)
        on left: 52 53 54 55
        on right: 53 54 55 60 61 62 63 93
    unary_operator <n> (184)
        on left: 56 57 58 59
        on right: 55
    multiplicative_expression <expression> (185)
        on left: 60 61 62 63
        on right: 61 62 63 64 65 66
    additive_expression <expression> (186)
        on left: 64 65 66
        on right: 65 66 67 68 69
    shift_expression <expression> (187)
        on left: 67 68 69
        on right: 68 69 70 71 72 73 74
    relational_expression <expression> (188)
        on left: 70 71 72 73 74
        on right: 71 72 73 74 75 76 77
    equality_expression <expression> (189)
        on left: 75 76 77
        on right: 76 77 78 79
    and_expression <expression> (190)
        on left: 78 79
        on right: 79 80 81
    exclusive_or_expression <expression> (191)
        on left: 80 81
        on right: 81 82 83
    inclusive_or_expression <expression> (192)
        on left: 82 83
        on right: 83 84 85
    logical_and_expression <expression> (193)
        on left: 84 85
        on right: 85 86 87
    logical_xor_expression <expression> (194)
        on left: 86 87
        on right: 87 88 89
    logical_or_expression <expression> (195)
        on left: 88 89
        on right: 89 90 91
    conditional_expression <expression> (196)
        on left: 90 91
        on right: 92 107
    assignment_expression <expression> (197)
        on left: 92 93
        on right: 47 48 91 93 105 106 222
    assignment_operator <n> (198)
        on left: 94 95 96 97 98 99 100 101 102 103 104
        on right: 93
    expression <expression> (199)
        on left: 105 106
        on right: 33 40 91 106 248 249 252 254 257 266 273 277
    constant_expression <expression> (200)
        on left: 107
        on right: 151 199 201
    declaration <node> (201)
        on left: 108 109 110 111
        on right: 227 281
    function_prototype <function> (202)
        on left: 112
        on right: 108 285
    function_declarator <function> (203)
        on left: 113 114
        on right: 112
    function_header_with_parameters <function> (204)
        on left: 115 116
        on right: 114 116
    function_header <function> (205)
        on left: 117
        on right: 113 115
    parameter_declarator <parameter_declarator> (206)
        on left: 118 119 120
        on right: 121
    parameter_declaration <parameter_declarator> (207)
        on left: 121 122
        on right: 115 116
    parameter_qualifier <type_qualifier> (208)
        on left: 123 124 125 126 127 128
        on right: 121 122 124 125 126 127 128
    parameter_direction_qualifier <type_qualifier> (209)
        on left: 129 130 131
        on right: 126
    parameter_type_specifier <type_specifier> (210)
        on left: 132
        on right: 122
    init_declarator_list <declarator_list> (211)
        on left: 133 134 135 136 137
        on right: 109 134 135 136 137
    single_declaration <declarator_list> (212)
        on left: 138 139 140 141 142 143 144
        on right: 133
    fully_specified_type <fully_specified_type> (213)
        on left: 145 146
        on right: 117 138 139 140 141 142 217 253 300
    layout_qualifier <type_qualifier> (214)
        on left: 147
        on right: 119 168 175 287 301 302 303 304 305 306 307 308
    layout_qualifier_id_list <type_qualifier> (215)
        on left: 148 149
        on right: 147 149
    layout_qualifier_id <type_qualifier> (216)
        on left: 150 151 152
        on right: 148 149
    interface_block_layout_qualifier <type_qualifier> (217)
        on left: 153 154 155
        on right: 152
    subroutine_qualifier <type_qualifier> (218)
        on left: 156 157
        on right: 170 176
    subroutine_type_list <subroutine_list> (219)
        on left: 158 159
        on right: 157 159
    interpolation_qualifier <type_qualifier> (220)
        on left: 160 161 162
        on right: 167 174
    type_qualifier <type_qualifier> (221)
        on left: 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
        on right: 146 172 173 174 175 176 177 178 179 180
    auxiliary_storage_qualifier <type_qualifier> (222)
        on left: 181 182 183
        on right: 165 177 294
    storage_qualifier <type_qualifier> (223)
        on left: 184 185 186 187 188 189 190 191 192
        on right: 166 178
    memory_qualifier <type_qualifier> (224)
        on left: 193 194 195 196 197
        on right: 128 169 180 288
    array_specifier <array_specifier> (225)
        on left: 198 199 200 201
        on right: 120 135 136 140 141 200 201 203 221 297
    type_specifier <type_specifier> (226)
        on left: 202 203
        on right: 50 110 118 119 120 132 145 146
    type_specifier_nonarray <type_specifier> (227)
        on left: 204 205 206
        on right: 202 203
    basic_type_specifier_nonarray <type> (228)
        on left: 207 208 209
        on right: 204
    precision_qualifier <n> (229)
        on left: 210 211 212
        on right: 110 127 171 179
    struct_specifier <struct_specifier> (230)
        on left: 213 214
        on right: 205
    struct_declaration_list <declarator_list> (231)
        on left: 215 216
        on right: 213 214 216
    struct_declaration <declarator_list> (232)
        on left: 217
        on right: 215 216
    struct_declarator_list <declaration> (233)
        on left: 218 219
        on right: 217 219 300
    struct_declarator <declaration> (234)
        on left: 220 221
        on right: 218 219
    initializer <expression> (235)
        on left: 222 223 224
        on right: 136 137 141 142 225 226 253
    initializer_list <expression> (236)
        on left: 225 226
        on right: 223 224 226
    declaration_statement <node> (237)
        on left: 227
        on right: 230 269
    statement <node> (238)
        on left: 228 229
        on right: 244 245 250 251 261 262
    simple_statement <node> (239)
        on left: 230 231 232 233 234 235 236
        on right: 229 241
    compound_statement <compound_statement> (240)
        on left: 237 239
        on right: 228
    $@2 (241)
        on left: 238
        on right: 239
    statement_no_new_scope <node> (242)
        on left: 240 241
        on right: 265 266 267
    compound_statement_no_new_scope <compound_statement> (243)
        on left: 242 243
        on right: 240 285
    statement_list <node> (244)
        on left: 244 245 246
        on right: 239 243 245 246
    expression_statement <node> (245)
        on left: 247 248
        on right: 231 268
    selection_statement <node> (246)
        on left: 249
        on right: 232
    selection_rest_statement <selection_rest_statement> (247)
        on left: 250 251
        on right: 249
    condition <node> (248)
        on left: 252 253
        on right: 265 270
    switch_statement <node> (249)
        on left: 254
        on right: 233
    switch_body <switch_body> (250)
        on left: 255 256
        on right: 254
    case_label <case_label> (251)
        on left: 257 258
        on right: 259 260
    case_label_list <case_label_list> (252)
        on left: 259 260
        on right: 260 261
    case_statement <case_statement> (253)
        on left: 261 262
        on right: 262 263 264
    case_statement_list <case_statement_list> (254)
        on left: 263 264
        on right: 256 264
    iteration_statement <node> (255)
        on left: 265 266 267
        on right: 234
    for_init_statement <node> (256)
        on left: 268 269
        on right: 267
    conditionopt <node> (257)
        on left: 270 271
        on right: 272 273
    for_rest_statement <for_rest_statement> (258)
        on left: 272 273
        on right: 267
    jump_statement <node> (259)
        on left: 274 275 276 277 278
        on right: 235
    demote_statement <node> (260)
        on left: 279
        on right: 236
    external_declaration <node> (261)
        on left: 280 281 282 283 284
        on right: 19 20
    function_definition <function_definition> (262)
        on left: 285
        on right: 280
    interface_block <node> (263)
        on left: 286 287 288
        on right: 111 287 288
    basic_interface_block <interface_block> (264)
        on left: 289
        on right: 286
    interface_qualifier <type_qualifier> (265)
        on left: 290 291 292 293 294
        on right: 289 294
    instance_name_opt <interface_block> (266)
        on left: 295 296 297
        on right: 289
    member_list <declarator_list> (267)
        on left: 298 299
        on right: 289 299
    member_declaration <declarator_list> (268)
        on left: 300
        on right: 298 299
    layout_uniform_defaults <type_qualifier> (269)
        on left: 301 302
        on right: 301 309
    layout_buffer_defaults <type_qualifier> (270)
        on left: 303 304
        on right: 303 310
    layout_in_defaults <type_qualifier> (271)
        on left: 305 306
        on right: 305 311
    layout_out_defaults <type_qualifier> (272)
        on left: 307 308
        on right: 307 312
    layout_defaults <node> (273)
        on left: 309 310 311 312
        on right: 283


State 0

    0 $accept: • translation_unit $end

    VERSION_TOK  shift, and go to state 1

    $default  reduce using rule 3 (version_statement)

    translation_unit   go to state 2
    version_statement  go to state 3


State 1

    4 version_statement: VERSION_TOK • INTCONSTANT EOL
    5                  | VERSION_TOK • INTCONSTANT any_identifier EOL

    INTCONSTANT  shift, and go to state 4


State 2

    0 $accept: translation_unit • $end

    $end  shift, and go to state 5


State 3

    2 translation_unit: version_statement • extension_statement_list $@1 external_declaration_list

    $default  reduce using rule 13 (extension_statement_list)

    extension_statement_list  go to state 6


State 4

    4 version_statement: VERSION_TOK INTCONSTANT • EOL
    5                  | VERSION_TOK INTCONSTANT • any_identifier EOL

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9
    EOL              shift, and go to state 10

    any_identifier  go to state 11


State 5

    0 $accept: translation_unit $end •

    $default  accept


State 6

    2 translation_unit: version_statement extension_statement_list • $@1 external_declaration_list
   14 extension_statement_list: extension_statement_list • extension_statement

    EXTENSION  shift, and go to state 12

    $default  reduce using rule 1 ($@1)

    $@1                  go to state 13
    extension_statement  go to state 14


State 7

   15 any_identifier: IDENTIFIER •

    $default  reduce using rule 15 (any_identifier)


State 8

   16 any_identifier: TYPE_IDENTIFIER •

    $default  reduce using rule 16 (any_identifier)


State 9

   17 any_identifier: NEW_IDENTIFIER •

    $default  reduce using rule 17 (any_identifier)


State 10

    4 version_statement: VERSION_TOK INTCONSTANT EOL •

    $default  reduce using rule 4 (version_statement)


State 11

    5 version_statement: VERSION_TOK INTCONSTANT any_identifier • EOL

    EOL  shift, and go to state 15


State 12

   18 extension_statement: EXTENSION • any_identifier COLON any_identifier EOL

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 16


State 13

    2 translation_unit: version_statement extension_statement_list $@1 • external_declaration_list

    ATTRIBUTE             shift, and go to state 17
    CONST_TOK             shift, and go to state 18
    BASIC_TYPE_TOK        shift, and go to state 19
    BUFFER                shift, and go to state 20
    CENTROID              shift, and go to state 21
    IN_TOK                shift, and go to state 22
    OUT_TOK               shift, and go to state 23
    INOUT_TOK             shift, and go to state 24
    UNIFORM               shift, and go to state 25
    VARYING               shift, and go to state 26
    SAMPLE                shift, and go to state 27
    NOPERSPECTIVE         shift, and go to state 28
    FLAT                  shift, and go to state 29
    SMOOTH                shift, and go to state 30
    COHERENT              shift, and go to state 31
    VOLATILE              shift, and go to state 32
    RESTRICT              shift, and go to state 33
    READONLY              shift, and go to state 34
    WRITEONLY             shift, and go to state 35
    SHARED                shift, and go to state 36
    STRUCT                shift, and go to state 37
    VOID_TOK              shift, and go to state 38
    TYPE_IDENTIFIER       shift, and go to state 39
    INVARIANT             shift, and go to state 40
    PRECISE               shift, and go to state 41
    LOWP                  shift, and go to state 42
    MEDIUMP               shift, and go to state 43
    HIGHP                 shift, and go to state 44
    PRECISION             shift, and go to state 45
    PRAGMA_DEBUG_ON       shift, and go to state 46
    PRAGMA_DEBUG_OFF      shift, and go to state 47
    PRAGMA_OPTIMIZE_ON    shift, and go to state 48
    PRAGMA_OPTIMIZE_OFF   shift, and go to state 49
    PRAGMA_WARNING_ON     shift, and go to state 50
    PRAGMA_WARNING_OFF    shift, and go to state 51
    PRAGMA_INVARIANT_ALL  shift, and go to state 52
    LAYOUT_TOK            shift, and go to state 53
    UNSIGNED              shift, and go to state 54
    PATCH                 shift, and go to state 55
    SUBROUTINE            shift, and go to state 56
    ';'                   shift, and go to state 57

    pragma_statement                 go to state 58
    external_declaration_list        go to state 59
    declaration                      go to state 60
    function_prototype               go to state 61
    function_declarator              go to state 62
    function_header_with_parameters  go to state 63
    function_header                  go to state 64
    init_declarator_list             go to state 65
    single_declaration               go to state 66
    fully_specified_type             go to state 67
    layout_qualifier                 go to state 68
    subroutine_qualifier             go to state 69
    interpolation_qualifier          go to state 70
    type_qualifier                   go to state 71
    auxiliary_storage_qualifier      go to state 72
    storage_qualifier                go to state 73
    memory_qualifier                 go to state 74
    type_specifier                   go to state 75
    type_specifier_nonarray          go to state 76
    basic_type_specifier_nonarray    go to state 77
    precision_qualifier              go to state 78
    struct_specifier                 go to state 79
    external_declaration             go to state 80
    function_definition              go to state 81
    interface_block                  go to state 82
    basic_interface_block            go to state 83
    interface_qualifier              go to state 84
    layout_uniform_defaults          go to state 85
    layout_buffer_defaults           go to state 86
    layout_in_defaults               go to state 87
    layout_out_defaults              go to state 88
    layout_defaults                  go to state 89


State 14

   14 extension_statement_list: extension_statement_list extension_statement •

    $default  reduce using rule 14 (extension_statement_list)


State 15

    5 version_statement: VERSION_TOK INTCONSTANT any_identifier EOL •

    $default  reduce using rule 5 (version_statement)


State 16

   18 extension_statement: EXTENSION any_identifier • COLON any_identifier EOL

    COLON  shift, and go to state 90


State 17

  185 storage_qualifier: ATTRIBUTE •

    $default  reduce using rule 185 (storage_qualifier)


State 18

  184 storage_qualifier: CONST_TOK •

    $default  reduce using rule 184 (storage_qualifier)


State 19

  208 basic_type_specifier_nonarray: BASIC_TYPE_TOK •

    $default  reduce using rule 208 (basic_type_specifier_nonarray)


State 20

  191 storage_qualifier: BUFFER •
  293 interface_qualifier: BUFFER •

    NEW_IDENTIFIER  reduce using rule 293 (interface_qualifier)
    $default        reduce using rule 191 (storage_qualifier)


State 21

  181 auxiliary_storage_qualifier: CENTROID •

    $default  reduce using rule 181 (auxiliary_storage_qualifier)


State 22

  187 storage_qualifier: IN_TOK •
  290 interface_qualifier: IN_TOK •

    NEW_IDENTIFIER  reduce using rule 290 (interface_qualifier)
    $default        reduce using rule 187 (storage_qualifier)


State 23

  188 storage_qualifier: OUT_TOK •
  291 interface_qualifier: OUT_TOK •

    NEW_IDENTIFIER  reduce using rule 291 (interface_qualifier)
    $default        reduce using rule 188 (storage_qualifier)


State 24

  189 storage_qualifier: INOUT_TOK •

    $default  reduce using rule 189 (storage_qualifier)


State 25

  190 storage_qualifier: UNIFORM •
  292 interface_qualifier: UNIFORM •

    NEW_IDENTIFIER  reduce using rule 292 (interface_qualifier)
    $default        reduce using rule 190 (storage_qualifier)


State 26

  186 storage_qualifier: VARYING •

    $default  reduce using rule 186 (storage_qualifier)


State 27

  182 auxiliary_storage_qualifier: SAMPLE •

    $default  reduce using rule 182 (auxiliary_storage_qualifier)


State 28

  162 interpolation_qualifier: NOPERSPECTIVE •

    $default  reduce using rule 162 (interpolation_qualifier)


State 29

  161 interpolation_qualifier: FLAT •

    $default  reduce using rule 161 (interpolation_qualifier)


State 30

  160 interpolation_qualifier: SMOOTH •

    $default  reduce using rule 160 (interpolation_qualifier)


State 31

  193 memory_qualifier: COHERENT •

    $default  reduce using rule 193 (memory_qualifier)


State 32

  194 memory_qualifier: VOLATILE •

    $default  reduce using rule 194 (memory_qualifier)


State 33

  195 memory_qualifier: RESTRICT •

    $default  reduce using rule 195 (memory_qualifier)


State 34

  196 memory_qualifier: READONLY •

    $default  reduce using rule 196 (memory_qualifier)


State 35

  197 memory_qualifier: WRITEONLY •

    $default  reduce using rule 197 (memory_qualifier)


State 36

  192 storage_qualifier: SHARED •

    $default  reduce using rule 192 (storage_qualifier)


State 37

  213 struct_specifier: STRUCT • any_identifier '{' struct_declaration_list '}'
  214                 | STRUCT • '{' struct_declaration_list '}'

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9
    '{'              shift, and go to state 91

    any_identifier  go to state 92


State 38

  207 basic_type_specifier_nonarray: VOID_TOK •

    $default  reduce using rule 207 (basic_type_specifier_nonarray)


State 39

  206 type_specifier_nonarray: TYPE_IDENTIFIER •

    $default  reduce using rule 206 (type_specifier_nonarray)


State 40

  143 single_declaration: INVARIANT • variable_identifier
  163 type_qualifier: INVARIANT •
  173               | INVARIANT • type_qualifier

    ATTRIBUTE       shift, and go to state 17
    CONST_TOK       shift, and go to state 18
    BUFFER          shift, and go to state 93
    CENTROID        shift, and go to state 21
    IN_TOK          shift, and go to state 94
    OUT_TOK         shift, and go to state 95
    INOUT_TOK       shift, and go to state 24
    UNIFORM         shift, and go to state 96
    VARYING         shift, and go to state 26
    SAMPLE          shift, and go to state 27
    NOPERSPECTIVE   shift, and go to state 28
    FLAT            shift, and go to state 29
    SMOOTH          shift, and go to state 30
    COHERENT        shift, and go to state 31
    VOLATILE        shift, and go to state 32
    RESTRICT        shift, and go to state 33
    READONLY        shift, and go to state 34
    WRITEONLY       shift, and go to state 35
    SHARED          shift, and go to state 36
    IDENTIFIER      shift, and go to state 97
    NEW_IDENTIFIER  shift, and go to state 98
    INVARIANT       shift, and go to state 99
    PRECISE         shift, and go to state 100
    LOWP            shift, and go to state 42
    MEDIUMP         shift, and go to state 43
    HIGHP           shift, and go to state 44
    LAYOUT_TOK      shift, and go to state 53
    PATCH           shift, and go to state 55
    SUBROUTINE      shift, and go to state 56

    $default  reduce using rule 163 (type_qualifier)

    variable_identifier          go to state 101
    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 103
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 41

  144 single_declaration: PRECISE • variable_identifier
  164 type_qualifier: PRECISE •
  172               | PRECISE • type_qualifier

    ATTRIBUTE       shift, and go to state 17
    CONST_TOK       shift, and go to state 18
    BUFFER          shift, and go to state 93
    CENTROID        shift, and go to state 21
    IN_TOK          shift, and go to state 94
    OUT_TOK         shift, and go to state 95
    INOUT_TOK       shift, and go to state 24
    UNIFORM         shift, and go to state 96
    VARYING         shift, and go to state 26
    SAMPLE          shift, and go to state 27
    NOPERSPECTIVE   shift, and go to state 28
    FLAT            shift, and go to state 29
    SMOOTH          shift, and go to state 30
    COHERENT        shift, and go to state 31
    VOLATILE        shift, and go to state 32
    RESTRICT        shift, and go to state 33
    READONLY        shift, and go to state 34
    WRITEONLY       shift, and go to state 35
    SHARED          shift, and go to state 36
    IDENTIFIER      shift, and go to state 97
    NEW_IDENTIFIER  shift, and go to state 98
    INVARIANT       shift, and go to state 99
    PRECISE         shift, and go to state 100
    LOWP            shift, and go to state 42
    MEDIUMP         shift, and go to state 43
    HIGHP           shift, and go to state 44
    LAYOUT_TOK      shift, and go to state 53
    PATCH           shift, and go to state 55
    SUBROUTINE      shift, and go to state 56

    $default  reduce using rule 164 (type_qualifier)

    variable_identifier          go to state 106
    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 107
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 42

  212 precision_qualifier: LOWP •

    $default  reduce using rule 212 (precision_qualifier)


State 43

  211 precision_qualifier: MEDIUMP •

    $default  reduce using rule 211 (precision_qualifier)


State 44

  210 precision_qualifier: HIGHP •

    $default  reduce using rule 210 (precision_qualifier)


State 45

  110 declaration: PRECISION • precision_qualifier type_specifier ';'

    LOWP     shift, and go to state 42
    MEDIUMP  shift, and go to state 43
    HIGHP    shift, and go to state 44

    precision_qualifier  go to state 108


State 46

    6 pragma_statement: PRAGMA_DEBUG_ON • EOL

    EOL  shift, and go to state 109


State 47

    7 pragma_statement: PRAGMA_DEBUG_OFF • EOL

    EOL  shift, and go to state 110


State 48

    8 pragma_statement: PRAGMA_OPTIMIZE_ON • EOL

    EOL  shift, and go to state 111


State 49

    9 pragma_statement: PRAGMA_OPTIMIZE_OFF • EOL

    EOL  shift, and go to state 112


State 50

   11 pragma_statement: PRAGMA_WARNING_ON • EOL

    EOL  shift, and go to state 113


State 51

   12 pragma_statement: PRAGMA_WARNING_OFF • EOL

    EOL  shift, and go to state 114


State 52

   10 pragma_statement: PRAGMA_INVARIANT_ALL • EOL

    EOL  shift, and go to state 115


State 53

  147 layout_qualifier: LAYOUT_TOK • '(' layout_qualifier_id_list ')'

    '('  shift, and go to state 116


State 54

  209 basic_type_specifier_nonarray: UNSIGNED • BASIC_TYPE_TOK

    BASIC_TYPE_TOK  shift, and go to state 117


State 55

  183 auxiliary_storage_qualifier: PATCH •

    $default  reduce using rule 183 (auxiliary_storage_qualifier)


State 56

  156 subroutine_qualifier: SUBROUTINE •
  157                     | SUBROUTINE • '(' subroutine_type_list ')'

    '('  shift, and go to state 118

    $default  reduce using rule 156 (subroutine_qualifier)


State 57

  284 external_declaration: ';' •

    $default  reduce using rule 284 (external_declaration)


State 58

  282 external_declaration: pragma_statement •

    $default  reduce using rule 282 (external_declaration)


State 59

    2 translation_unit: version_statement extension_statement_list $@1 external_declaration_list •
   20 external_declaration_list: external_declaration_list • external_declaration
   21                          | external_declaration_list • extension_statement

    ATTRIBUTE             shift, and go to state 17
    CONST_TOK             shift, and go to state 18
    BASIC_TYPE_TOK        shift, and go to state 19
    BUFFER                shift, and go to state 20
    CENTROID              shift, and go to state 21
    IN_TOK                shift, and go to state 22
    OUT_TOK               shift, and go to state 23
    INOUT_TOK             shift, and go to state 24
    UNIFORM               shift, and go to state 25
    VARYING               shift, and go to state 26
    SAMPLE                shift, and go to state 27
    NOPERSPECTIVE         shift, and go to state 28
    FLAT                  shift, and go to state 29
    SMOOTH                shift, and go to state 30
    COHERENT              shift, and go to state 31
    VOLATILE              shift, and go to state 32
    RESTRICT              shift, and go to state 33
    READONLY              shift, and go to state 34
    WRITEONLY             shift, and go to state 35
    SHARED                shift, and go to state 36
    STRUCT                shift, and go to state 37
    VOID_TOK              shift, and go to state 38
    TYPE_IDENTIFIER       shift, and go to state 39
    INVARIANT             shift, and go to state 40
    PRECISE               shift, and go to state 41
    LOWP                  shift, and go to state 42
    MEDIUMP               shift, and go to state 43
    HIGHP                 shift, and go to state 44
    PRECISION             shift, and go to state 45
    EXTENSION             shift, and go to state 12
    PRAGMA_DEBUG_ON       shift, and go to state 46
    PRAGMA_DEBUG_OFF      shift, and go to state 47
    PRAGMA_OPTIMIZE_ON    shift, and go to state 48
    PRAGMA_OPTIMIZE_OFF   shift, and go to state 49
    PRAGMA_WARNING_ON     shift, and go to state 50
    PRAGMA_WARNING_OFF    shift, and go to state 51
    PRAGMA_INVARIANT_ALL  shift, and go to state 52
    LAYOUT_TOK            shift, and go to state 53
    UNSIGNED              shift, and go to state 54
    PATCH                 shift, and go to state 55
    SUBROUTINE            shift, and go to state 56
    ';'                   shift, and go to state 57

    $default  reduce using rule 2 (translation_unit)

    pragma_statement                 go to state 58
    extension_statement              go to state 119
    declaration                      go to state 60
    function_prototype               go to state 61
    function_declarator              go to state 62
    function_header_with_parameters  go to state 63
    function_header                  go to state 64
    init_declarator_list             go to state 65
    single_declaration               go to state 66
    fully_specified_type             go to state 67
    layout_qualifier                 go to state 68
    subroutine_qualifier             go to state 69
    interpolation_qualifier          go to state 70
    type_qualifier                   go to state 71
    auxiliary_storage_qualifier      go to state 72
    storage_qualifier                go to state 73
    memory_qualifier                 go to state 74
    type_specifier                   go to state 75
    type_specifier_nonarray          go to state 76
    basic_type_specifier_nonarray    go to state 77
    precision_qualifier              go to state 78
    struct_specifier                 go to state 79
    external_declaration             go to state 120
    function_definition              go to state 81
    interface_block                  go to state 82
    basic_interface_block            go to state 83
    interface_qualifier              go to state 84
    layout_uniform_defaults          go to state 85
    layout_buffer_defaults           go to state 86
    layout_in_defaults               go to state 87
    layout_out_defaults              go to state 88
    layout_defaults                  go to state 89


State 60

  281 external_declaration: declaration •

    $default  reduce using rule 281 (external_declaration)


State 61

  108 declaration: function_prototype • ';'
  285 function_definition: function_prototype • compound_statement_no_new_scope

    ';'  shift, and go to state 121
    '{'  shift, and go to state 122

    compound_statement_no_new_scope  go to state 123


State 62

  112 function_prototype: function_declarator • ')'

    ')'  shift, and go to state 124


State 63

  114 function_declarator: function_header_with_parameters •
  116 function_header_with_parameters: function_header_with_parameters • ',' parameter_declaration

    ','  shift, and go to state 125

    $default  reduce using rule 114 (function_declarator)


State 64

  113 function_declarator: function_header •
  115 function_header_with_parameters: function_header • parameter_declaration

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    ')'       reduce using rule 113 (function_declarator)
    $default  reduce using rule 123 (parameter_qualifier)

    parameter_declaration          go to state 131
    parameter_qualifier            go to state 132
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 65

  109 declaration: init_declarator_list • ';'
  134 init_declarator_list: init_declarator_list • ',' any_identifier
  135                     | init_declarator_list • ',' any_identifier array_specifier
  136                     | init_declarator_list • ',' any_identifier array_specifier '=' initializer
  137                     | init_declarator_list • ',' any_identifier '=' initializer

    ','  shift, and go to state 136
    ';'  shift, and go to state 137


State 66

  133 init_declarator_list: single_declaration •

    $default  reduce using rule 133 (init_declarator_list)


State 67

  117 function_header: fully_specified_type • variable_identifier '('
  138 single_declaration: fully_specified_type •
  139                   | fully_specified_type • any_identifier
  140                   | fully_specified_type • any_identifier array_specifier
  141                   | fully_specified_type • any_identifier array_specifier '=' initializer
  142                   | fully_specified_type • any_identifier '=' initializer

    IDENTIFIER       shift, and go to state 138
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 139

    $default  reduce using rule 138 (single_declaration)

    any_identifier       go to state 140
    variable_identifier  go to state 141


State 68

  168 type_qualifier: layout_qualifier •
  175               | layout_qualifier • type_qualifier
  287 interface_block: layout_qualifier • interface_block
  301 layout_uniform_defaults: layout_qualifier • layout_uniform_defaults
  302                        | layout_qualifier • UNIFORM ';'
  303 layout_buffer_defaults: layout_qualifier • layout_buffer_defaults
  304                       | layout_qualifier • BUFFER ';'
  305 layout_in_defaults: layout_qualifier • layout_in_defaults
  306                   | layout_qualifier • IN_TOK ';'
  307 layout_out_defaults: layout_qualifier • layout_out_defaults
  308                    | layout_qualifier • OUT_TOK ';'

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 142
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 143
    OUT_TOK        shift, and go to state 144
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 145
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 168 (type_qualifier)

    layout_qualifier             go to state 68
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 146
    auxiliary_storage_qualifier  go to state 72
    storage_qualifier            go to state 73
    memory_qualifier             go to state 74
    precision_qualifier          go to state 78
    interface_block              go to state 147
    basic_interface_block        go to state 83
    interface_qualifier          go to state 84
    layout_uniform_defaults      go to state 148
    layout_buffer_defaults       go to state 149
    layout_in_defaults           go to state 150
    layout_out_defaults          go to state 151


State 69

  170 type_qualifier: subroutine_qualifier •
  176               | subroutine_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 170 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 152
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 70

  167 type_qualifier: interpolation_qualifier •
  174               | interpolation_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 167 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 153
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 71

  146 fully_specified_type: type_qualifier • type_specifier

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    UNSIGNED         shift, and go to state 54

    type_specifier                 go to state 154
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    struct_specifier               go to state 79


State 72

  165 type_qualifier: auxiliary_storage_qualifier •
  177               | auxiliary_storage_qualifier • type_qualifier
  294 interface_qualifier: auxiliary_storage_qualifier • interface_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 20
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 22
    OUT_TOK        shift, and go to state 23
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 25
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 165 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 155
    auxiliary_storage_qualifier  go to state 72
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78
    interface_qualifier          go to state 156


State 73

  166 type_qualifier: storage_qualifier •
  178               | storage_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 166 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 157
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 74

  169 type_qualifier: memory_qualifier •
  180               | memory_qualifier • type_qualifier
  288 interface_block: memory_qualifier • interface_block

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 20
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 22
    OUT_TOK        shift, and go to state 23
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 25
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 169 (type_qualifier)

    layout_qualifier             go to state 158
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 159
    auxiliary_storage_qualifier  go to state 72
    storage_qualifier            go to state 73
    memory_qualifier             go to state 74
    precision_qualifier          go to state 78
    interface_block              go to state 160
    basic_interface_block        go to state 83
    interface_qualifier          go to state 84


State 75

  145 fully_specified_type: type_specifier •

    $default  reduce using rule 145 (fully_specified_type)


State 76

  202 type_specifier: type_specifier_nonarray •
  203               | type_specifier_nonarray • array_specifier

    '['  shift, and go to state 161

    $default  reduce using rule 202 (type_specifier)

    array_specifier  go to state 162


State 77

  204 type_specifier_nonarray: basic_type_specifier_nonarray •

    $default  reduce using rule 204 (type_specifier_nonarray)


State 78

  171 type_qualifier: precision_qualifier •
  179               | precision_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 171 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 163
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 79

  205 type_specifier_nonarray: struct_specifier •

    $default  reduce using rule 205 (type_specifier_nonarray)


State 80

   19 external_declaration_list: external_declaration •

    $default  reduce using rule 19 (external_declaration_list)


State 81

  280 external_declaration: function_definition •

    $default  reduce using rule 280 (external_declaration)


State 82

  111 declaration: interface_block •

    $default  reduce using rule 111 (declaration)


State 83

  286 interface_block: basic_interface_block •

    $default  reduce using rule 286 (interface_block)


State 84

  289 basic_interface_block: interface_qualifier • NEW_IDENTIFIER '{' member_list '}' instance_name_opt ';'

    NEW_IDENTIFIER  shift, and go to state 164


State 85

  309 layout_defaults: layout_uniform_defaults •

    $default  reduce using rule 309 (layout_defaults)


State 86

  310 layout_defaults: layout_buffer_defaults •

    $default  reduce using rule 310 (layout_defaults)


State 87

  311 layout_defaults: layout_in_defaults •

    $default  reduce using rule 311 (layout_defaults)


State 88

  312 layout_defaults: layout_out_defaults •

    $default  reduce using rule 312 (layout_defaults)


State 89

  283 external_declaration: layout_defaults •

    $default  reduce using rule 283 (external_declaration)


State 90

   18 extension_statement: EXTENSION any_identifier COLON • any_identifier EOL

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 165


State 91

  214 struct_specifier: STRUCT '{' • struct_declaration_list '}'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56

    fully_specified_type           go to state 166
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    struct_declaration_list        go to state 167
    struct_declaration             go to state 168


State 92

  213 struct_specifier: STRUCT any_identifier • '{' struct_declaration_list '}'

    '{'  shift, and go to state 169


State 93

  191 storage_qualifier: BUFFER •

    $default  reduce using rule 191 (storage_qualifier)


State 94

  187 storage_qualifier: IN_TOK •

    $default  reduce using rule 187 (storage_qualifier)


State 95

  188 storage_qualifier: OUT_TOK •

    $default  reduce using rule 188 (storage_qualifier)


State 96

  190 storage_qualifier: UNIFORM •

    $default  reduce using rule 190 (storage_qualifier)


State 97

   22 variable_identifier: IDENTIFIER •

    $default  reduce using rule 22 (variable_identifier)


State 98

   23 variable_identifier: NEW_IDENTIFIER •

    $default  reduce using rule 23 (variable_identifier)


State 99

  163 type_qualifier: INVARIANT •
  173               | INVARIANT • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 163 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 103
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 100

  164 type_qualifier: PRECISE •
  172               | PRECISE • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 164 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 107
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 101

  143 single_declaration: INVARIANT variable_identifier •

    $default  reduce using rule 143 (single_declaration)


State 102

  168 type_qualifier: layout_qualifier •
  175               | layout_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 168 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 146
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 103

  173 type_qualifier: INVARIANT type_qualifier •

    $default  reduce using rule 173 (type_qualifier)


State 104

  165 type_qualifier: auxiliary_storage_qualifier •
  177               | auxiliary_storage_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 165 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 155
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 105

  169 type_qualifier: memory_qualifier •
  180               | memory_qualifier • type_qualifier

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 93
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 94
    OUT_TOK        shift, and go to state 95
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 96
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 169 (type_qualifier)

    layout_qualifier             go to state 102
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 159
    auxiliary_storage_qualifier  go to state 104
    storage_qualifier            go to state 73
    memory_qualifier             go to state 105
    precision_qualifier          go to state 78


State 106

  144 single_declaration: PRECISE variable_identifier •

    $default  reduce using rule 144 (single_declaration)


State 107

  172 type_qualifier: PRECISE type_qualifier •

    $default  reduce using rule 172 (type_qualifier)


State 108

  110 declaration: PRECISION precision_qualifier • type_specifier ';'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    UNSIGNED         shift, and go to state 54

    type_specifier                 go to state 170
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    struct_specifier               go to state 79


State 109

    6 pragma_statement: PRAGMA_DEBUG_ON EOL •

    $default  reduce using rule 6 (pragma_statement)


State 110

    7 pragma_statement: PRAGMA_DEBUG_OFF EOL •

    $default  reduce using rule 7 (pragma_statement)


State 111

    8 pragma_statement: PRAGMA_OPTIMIZE_ON EOL •

    $default  reduce using rule 8 (pragma_statement)


State 112

    9 pragma_statement: PRAGMA_OPTIMIZE_OFF EOL •

    $default  reduce using rule 9 (pragma_statement)


State 113

   11 pragma_statement: PRAGMA_WARNING_ON EOL •

    $default  reduce using rule 11 (pragma_statement)


State 114

   12 pragma_statement: PRAGMA_WARNING_OFF EOL •

    $default  reduce using rule 12 (pragma_statement)


State 115

   10 pragma_statement: PRAGMA_INVARIANT_ALL EOL •

    $default  reduce using rule 10 (pragma_statement)


State 116

  147 layout_qualifier: LAYOUT_TOK '(' • layout_qualifier_id_list ')'

    SHARED           shift, and go to state 171
    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9
    PACKED_TOK       shift, and go to state 172
    ROW_MAJOR        shift, and go to state 173

    any_identifier                    go to state 174
    layout_qualifier_id_list          go to state 175
    layout_qualifier_id               go to state 176
    interface_block_layout_qualifier  go to state 177


State 117

  209 basic_type_specifier_nonarray: UNSIGNED BASIC_TYPE_TOK •

    $default  reduce using rule 209 (basic_type_specifier_nonarray)


State 118

  157 subroutine_qualifier: SUBROUTINE '(' • subroutine_type_list ')'

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier        go to state 178
    subroutine_type_list  go to state 179


State 119

   21 external_declaration_list: external_declaration_list extension_statement •

    $default  reduce using rule 21 (external_declaration_list)


State 120

   20 external_declaration_list: external_declaration_list external_declaration •

    $default  reduce using rule 20 (external_declaration_list)


State 121

  108 declaration: function_prototype ';' •

    $default  reduce using rule 108 (declaration)


State 122

  242 compound_statement_no_new_scope: '{' • '}'
  243                                | '{' • statement_list '}'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206
    '}'              shift, and go to state 207

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 238
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    statement_list                        go to state 241
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 123

  285 function_definition: function_prototype compound_statement_no_new_scope •

    $default  reduce using rule 285 (function_definition)


State 124

  112 function_prototype: function_declarator ')' •

    $default  reduce using rule 112 (function_prototype)


State 125

  116 function_header_with_parameters: function_header_with_parameters ',' • parameter_declaration

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_declaration          go to state 248
    parameter_qualifier            go to state 132
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 126

  124 parameter_qualifier: CONST_TOK • parameter_qualifier

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_qualifier            go to state 249
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 127

  129 parameter_direction_qualifier: IN_TOK •

    $default  reduce using rule 129 (parameter_direction_qualifier)


State 128

  130 parameter_direction_qualifier: OUT_TOK •

    $default  reduce using rule 130 (parameter_direction_qualifier)


State 129

  131 parameter_direction_qualifier: INOUT_TOK •

    $default  reduce using rule 131 (parameter_direction_qualifier)


State 130

  125 parameter_qualifier: PRECISE • parameter_qualifier

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_qualifier            go to state 250
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 131

  115 function_header_with_parameters: function_header parameter_declaration •

    $default  reduce using rule 115 (function_header_with_parameters)


State 132

  121 parameter_declaration: parameter_qualifier • parameter_declarator
  122                      | parameter_qualifier • parameter_type_specifier

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54

    parameter_declarator           go to state 251
    parameter_type_specifier       go to state 252
    layout_qualifier               go to state 253
    type_specifier                 go to state 254
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    struct_specifier               go to state 79


State 133

  126 parameter_qualifier: parameter_direction_qualifier • parameter_qualifier

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_qualifier            go to state 255
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 134

  128 parameter_qualifier: memory_qualifier • parameter_qualifier

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_qualifier            go to state 256
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 135

  127 parameter_qualifier: precision_qualifier • parameter_qualifier

    CONST_TOK  shift, and go to state 126
    IN_TOK     shift, and go to state 127
    OUT_TOK    shift, and go to state 128
    INOUT_TOK  shift, and go to state 129
    COHERENT   shift, and go to state 31
    VOLATILE   shift, and go to state 32
    RESTRICT   shift, and go to state 33
    READONLY   shift, and go to state 34
    WRITEONLY  shift, and go to state 35
    PRECISE    shift, and go to state 130
    LOWP       shift, and go to state 42
    MEDIUMP    shift, and go to state 43
    HIGHP      shift, and go to state 44

    $default  reduce using rule 123 (parameter_qualifier)

    parameter_qualifier            go to state 257
    parameter_direction_qualifier  go to state 133
    memory_qualifier               go to state 134
    precision_qualifier            go to state 135


State 136

  134 init_declarator_list: init_declarator_list ',' • any_identifier
  135                     | init_declarator_list ',' • any_identifier array_specifier
  136                     | init_declarator_list ',' • any_identifier array_specifier '=' initializer
  137                     | init_declarator_list ',' • any_identifier '=' initializer

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 258


State 137

  109 declaration: init_declarator_list ';' •

    $default  reduce using rule 109 (declaration)


State 138

   15 any_identifier: IDENTIFIER •
   22 variable_identifier: IDENTIFIER •

    '('       reduce using rule 22 (variable_identifier)
    $default  reduce using rule 15 (any_identifier)


State 139

   17 any_identifier: NEW_IDENTIFIER •
   23 variable_identifier: NEW_IDENTIFIER •

    '('       reduce using rule 23 (variable_identifier)
    $default  reduce using rule 17 (any_identifier)


State 140

  139 single_declaration: fully_specified_type any_identifier •
  140                   | fully_specified_type any_identifier • array_specifier
  141                   | fully_specified_type any_identifier • array_specifier '=' initializer
  142                   | fully_specified_type any_identifier • '=' initializer

    '['  shift, and go to state 161
    '='  shift, and go to state 259

    $default  reduce using rule 139 (single_declaration)

    array_specifier  go to state 260


State 141

  117 function_header: fully_specified_type variable_identifier • '('

    '('  shift, and go to state 261


State 142

  191 storage_qualifier: BUFFER •
  293 interface_qualifier: BUFFER •
  304 layout_buffer_defaults: layout_qualifier BUFFER • ';'

    ';'  shift, and go to state 262

    NEW_IDENTIFIER  reduce using rule 293 (interface_qualifier)
    $default        reduce using rule 191 (storage_qualifier)


State 143

  187 storage_qualifier: IN_TOK •
  290 interface_qualifier: IN_TOK •
  306 layout_in_defaults: layout_qualifier IN_TOK • ';'

    ';'  shift, and go to state 263

    NEW_IDENTIFIER  reduce using rule 290 (interface_qualifier)
    $default        reduce using rule 187 (storage_qualifier)


State 144

  188 storage_qualifier: OUT_TOK •
  291 interface_qualifier: OUT_TOK •
  308 layout_out_defaults: layout_qualifier OUT_TOK • ';'

    ';'  shift, and go to state 264

    NEW_IDENTIFIER  reduce using rule 291 (interface_qualifier)
    $default        reduce using rule 188 (storage_qualifier)


State 145

  190 storage_qualifier: UNIFORM •
  292 interface_qualifier: UNIFORM •
  302 layout_uniform_defaults: layout_qualifier UNIFORM • ';'

    ';'  shift, and go to state 265

    NEW_IDENTIFIER  reduce using rule 292 (interface_qualifier)
    $default        reduce using rule 190 (storage_qualifier)


State 146

  175 type_qualifier: layout_qualifier type_qualifier •

    $default  reduce using rule 175 (type_qualifier)


State 147

  287 interface_block: layout_qualifier interface_block •

    $default  reduce using rule 287 (interface_block)


State 148

  301 layout_uniform_defaults: layout_qualifier layout_uniform_defaults •

    $default  reduce using rule 301 (layout_uniform_defaults)


State 149

  303 layout_buffer_defaults: layout_qualifier layout_buffer_defaults •

    $default  reduce using rule 303 (layout_buffer_defaults)


State 150

  305 layout_in_defaults: layout_qualifier layout_in_defaults •

    $default  reduce using rule 305 (layout_in_defaults)


State 151

  307 layout_out_defaults: layout_qualifier layout_out_defaults •

    $default  reduce using rule 307 (layout_out_defaults)


State 152

  176 type_qualifier: subroutine_qualifier type_qualifier •

    $default  reduce using rule 176 (type_qualifier)


State 153

  174 type_qualifier: interpolation_qualifier type_qualifier •

    $default  reduce using rule 174 (type_qualifier)


State 154

  146 fully_specified_type: type_qualifier type_specifier •

    $default  reduce using rule 146 (fully_specified_type)


State 155

  177 type_qualifier: auxiliary_storage_qualifier type_qualifier •

    $default  reduce using rule 177 (type_qualifier)


State 156

  294 interface_qualifier: auxiliary_storage_qualifier interface_qualifier •

    $default  reduce using rule 294 (interface_qualifier)


State 157

  178 type_qualifier: storage_qualifier type_qualifier •

    $default  reduce using rule 178 (type_qualifier)


State 158

  168 type_qualifier: layout_qualifier •
  175               | layout_qualifier • type_qualifier
  287 interface_block: layout_qualifier • interface_block

    ATTRIBUTE      shift, and go to state 17
    CONST_TOK      shift, and go to state 18
    BUFFER         shift, and go to state 20
    CENTROID       shift, and go to state 21
    IN_TOK         shift, and go to state 22
    OUT_TOK        shift, and go to state 23
    INOUT_TOK      shift, and go to state 24
    UNIFORM        shift, and go to state 25
    VARYING        shift, and go to state 26
    SAMPLE         shift, and go to state 27
    NOPERSPECTIVE  shift, and go to state 28
    FLAT           shift, and go to state 29
    SMOOTH         shift, and go to state 30
    COHERENT       shift, and go to state 31
    VOLATILE       shift, and go to state 32
    RESTRICT       shift, and go to state 33
    READONLY       shift, and go to state 34
    WRITEONLY      shift, and go to state 35
    SHARED         shift, and go to state 36
    INVARIANT      shift, and go to state 99
    PRECISE        shift, and go to state 100
    LOWP           shift, and go to state 42
    MEDIUMP        shift, and go to state 43
    HIGHP          shift, and go to state 44
    LAYOUT_TOK     shift, and go to state 53
    PATCH          shift, and go to state 55
    SUBROUTINE     shift, and go to state 56

    $default  reduce using rule 168 (type_qualifier)

    layout_qualifier             go to state 158
    subroutine_qualifier         go to state 69
    interpolation_qualifier      go to state 70
    type_qualifier               go to state 146
    auxiliary_storage_qualifier  go to state 72
    storage_qualifier            go to state 73
    memory_qualifier             go to state 74
    precision_qualifier          go to state 78
    interface_block              go to state 147
    basic_interface_block        go to state 83
    interface_qualifier          go to state 84


State 159

  180 type_qualifier: memory_qualifier type_qualifier •

    $default  reduce using rule 180 (type_qualifier)


State 160

  288 interface_block: memory_qualifier interface_block •

    $default  reduce using rule 288 (interface_block)


State 161

  198 array_specifier: '[' • ']'
  199                | '[' • constant_expression ']'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    ']'              shift, and go to state 266
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 268
    constant_expression                   go to state 269
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 162

  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'
  203 type_specifier: type_specifier_nonarray array_specifier •

    '['  shift, and go to state 271

    $default  reduce using rule 203 (type_specifier)


State 163

  179 type_qualifier: precision_qualifier type_qualifier •

    $default  reduce using rule 179 (type_qualifier)


State 164

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER • '{' member_list '}' instance_name_opt ';'

    '{'  shift, and go to state 272


State 165

   18 extension_statement: EXTENSION any_identifier COLON any_identifier • EOL

    EOL  shift, and go to state 273


State 166

  217 struct_declaration: fully_specified_type • struct_declarator_list ';'

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier          go to state 274
    struct_declarator_list  go to state 275
    struct_declarator       go to state 276


State 167

  214 struct_specifier: STRUCT '{' struct_declaration_list • '}'
  216 struct_declaration_list: struct_declaration_list • struct_declaration

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '}'              shift, and go to state 277

    fully_specified_type           go to state 166
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    struct_declaration             go to state 278


State 168

  215 struct_declaration_list: struct_declaration •

    $default  reduce using rule 215 (struct_declaration_list)


State 169

  213 struct_specifier: STRUCT any_identifier '{' • struct_declaration_list '}'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56

    fully_specified_type           go to state 166
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    struct_declaration_list        go to state 279
    struct_declaration             go to state 168


State 170

  110 declaration: PRECISION precision_qualifier type_specifier • ';'

    ';'  shift, and go to state 280


State 171

  155 interface_block_layout_qualifier: SHARED •

    $default  reduce using rule 155 (interface_block_layout_qualifier)


State 172

  154 interface_block_layout_qualifier: PACKED_TOK •

    $default  reduce using rule 154 (interface_block_layout_qualifier)


State 173

  153 interface_block_layout_qualifier: ROW_MAJOR •

    $default  reduce using rule 153 (interface_block_layout_qualifier)


State 174

  150 layout_qualifier_id: any_identifier •
  151                    | any_identifier • '=' constant_expression

    '='  shift, and go to state 281

    $default  reduce using rule 150 (layout_qualifier_id)


State 175

  147 layout_qualifier: LAYOUT_TOK '(' layout_qualifier_id_list • ')'
  149 layout_qualifier_id_list: layout_qualifier_id_list • ',' layout_qualifier_id

    ')'  shift, and go to state 282
    ','  shift, and go to state 283


State 176

  148 layout_qualifier_id_list: layout_qualifier_id •

    $default  reduce using rule 148 (layout_qualifier_id_list)


State 177

  152 layout_qualifier_id: interface_block_layout_qualifier •

    $default  reduce using rule 152 (layout_qualifier_id)


State 178

  158 subroutine_type_list: any_identifier •

    $default  reduce using rule 158 (subroutine_type_list)


State 179

  157 subroutine_qualifier: SUBROUTINE '(' subroutine_type_list • ')'
  159 subroutine_type_list: subroutine_type_list • ',' any_identifier

    ')'  shift, and go to state 284
    ','  shift, and go to state 285


State 180

  275 jump_statement: BREAK • ';'

    ';'  shift, and go to state 286


State 181

  274 jump_statement: CONTINUE • ';'

    ';'  shift, and go to state 287


State 182

  266 iteration_statement: DO • statement_no_new_scope WHILE '(' expression ')' ';'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 122

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    simple_statement                      go to state 288
    statement_no_new_scope                go to state 289
    compound_statement_no_new_scope       go to state 290
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 183

  267 iteration_statement: FOR • '(' for_init_statement for_rest_statement ')' statement_no_new_scope

    '('  shift, and go to state 291


State 184

  249 selection_statement: IF • '(' expression ')' selection_rest_statement

    '('  shift, and go to state 292


State 185

  279 demote_statement: DEMOTE • ';'

    ';'  shift, and go to state 293


State 186

  278 jump_statement: DISCARD • ';'

    ';'  shift, and go to state 294


State 187

  276 jump_statement: RETURN • ';'
  277               | RETURN • expression ';'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 295

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 296
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 188

  254 switch_statement: SWITCH • '(' expression ')' switch_body

    '('  shift, and go to state 297


State 189

  265 iteration_statement: WHILE • '(' condition ')' statement_no_new_scope

    '('  shift, and go to state 298


State 190

   30 primary_expression: FLOATCONSTANT •

    $default  reduce using rule 30 (primary_expression)


State 191

   29 primary_expression: FLOAT16CONSTANT •

    $default  reduce using rule 29 (primary_expression)


State 192

   31 primary_expression: DOUBLECONSTANT •

    $default  reduce using rule 31 (primary_expression)


State 193

   25 primary_expression: INTCONSTANT •

    $default  reduce using rule 25 (primary_expression)


State 194

   26 primary_expression: UINTCONSTANT •

    $default  reduce using rule 26 (primary_expression)


State 195

   32 primary_expression: BOOLCONSTANT •

    $default  reduce using rule 32 (primary_expression)


State 196

   27 primary_expression: INT64CONSTANT •

    $default  reduce using rule 27 (primary_expression)


State 197

   28 primary_expression: UINT64CONSTANT •

    $default  reduce using rule 28 (primary_expression)


State 198

   53 unary_expression: INC_OP • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 299
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 199

   54 unary_expression: DEC_OP • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 300
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 200

   33 primary_expression: '(' • expression ')'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 301
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 201

   56 unary_operator: '+' •

    $default  reduce using rule 56 (unary_operator)


State 202

   57 unary_operator: '-' •

    $default  reduce using rule 57 (unary_operator)


State 203

   58 unary_operator: '!' •

    $default  reduce using rule 58 (unary_operator)


State 204

   59 unary_operator: '~' •

    $default  reduce using rule 59 (unary_operator)


State 205

  247 expression_statement: ';' •

    $default  reduce using rule 247 (expression_statement)


State 206

  237 compound_statement: '{' • '}'
  239                   | '{' • $@2 statement_list '}'

    '}'  shift, and go to state 302

    $default  reduce using rule 238 ($@2)

    $@2  go to state 303


State 207

  242 compound_statement_no_new_scope: '{' '}' •

    $default  reduce using rule 242 (compound_statement_no_new_scope)


State 208

   24 primary_expression: variable_identifier •

    $default  reduce using rule 24 (primary_expression)


State 209

   34 postfix_expression: primary_expression •

    $default  reduce using rule 34 (postfix_expression)


State 210

   35 postfix_expression: postfix_expression • '[' integer_expression ']'
   37                   | postfix_expression • DOT_TOK FIELD_SELECTION
   38                   | postfix_expression • INC_OP
   39                   | postfix_expression • DEC_OP
   51 function_identifier: postfix_expression •
   52 unary_expression: postfix_expression •

    INC_OP   shift, and go to state 304
    DEC_OP   shift, and go to state 305
    DOT_TOK  shift, and go to state 306
    '['      shift, and go to state 307

    '('       reduce using rule 51 (function_identifier)
    $default  reduce using rule 52 (unary_expression)


State 211

   36 postfix_expression: function_call •

    $default  reduce using rule 36 (postfix_expression)


State 212

   41 function_call: function_call_or_method •

    $default  reduce using rule 41 (function_call)


State 213

   42 function_call_or_method: function_call_generic •

    $default  reduce using rule 42 (function_call_or_method)


State 214

   44 function_call_generic: function_call_header_no_parameters • ')'

    ')'  shift, and go to state 308


State 215

   43 function_call_generic: function_call_header_with_parameters • ')'
   48 function_call_header_with_parameters: function_call_header_with_parameters • ',' assignment_expression

    ')'  shift, and go to state 309
    ','  shift, and go to state 310


State 216

   45 function_call_header_no_parameters: function_call_header • VOID_TOK
   46                                   | function_call_header •
   47 function_call_header_with_parameters: function_call_header • assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 311
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    $default  reduce using rule 46 (function_call_header_no_parameters)

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 312
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 217

   49 function_call_header: function_identifier • '('

    '('  shift, and go to state 313


State 218

   60 multiplicative_expression: unary_expression •
   93 assignment_expression: unary_expression • assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 314
    DIV_ASSIGN    shift, and go to state 315
    ADD_ASSIGN    shift, and go to state 316
    MOD_ASSIGN    shift, and go to state 317
    LEFT_ASSIGN   shift, and go to state 318
    RIGHT_ASSIGN  shift, and go to state 319
    AND_ASSIGN    shift, and go to state 320
    XOR_ASSIGN    shift, and go to state 321
    OR_ASSIGN     shift, and go to state 322
    SUB_ASSIGN    shift, and go to state 323
    '='           shift, and go to state 324

    $default  reduce using rule 60 (multiplicative_expression)

    assignment_operator  go to state 325


State 219

   55 unary_expression: unary_operator • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 326
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 220

   61 multiplicative_expression: multiplicative_expression • '*' unary_expression
   62                          | multiplicative_expression • '/' unary_expression
   63                          | multiplicative_expression • '%' unary_expression
   64 additive_expression: multiplicative_expression •

    '*'  shift, and go to state 327
    '/'  shift, and go to state 328
    '%'  shift, and go to state 329

    $default  reduce using rule 64 (additive_expression)


State 221

   65 additive_expression: additive_expression • '+' multiplicative_expression
   66                    | additive_expression • '-' multiplicative_expression
   67 shift_expression: additive_expression •

    '+'  shift, and go to state 330
    '-'  shift, and go to state 331

    $default  reduce using rule 67 (shift_expression)


State 222

   68 shift_expression: shift_expression • LEFT_OP additive_expression
   69                 | shift_expression • RIGHT_OP additive_expression
   70 relational_expression: shift_expression •

    LEFT_OP   shift, and go to state 332
    RIGHT_OP  shift, and go to state 333

    $default  reduce using rule 70 (relational_expression)


State 223

   71 relational_expression: relational_expression • '<' shift_expression
   72                      | relational_expression • '>' shift_expression
   73                      | relational_expression • LE_OP shift_expression
   74                      | relational_expression • GE_OP shift_expression
   75 equality_expression: relational_expression •

    LE_OP  shift, and go to state 334
    GE_OP  shift, and go to state 335
    '<'    shift, and go to state 336
    '>'    shift, and go to state 337

    $default  reduce using rule 75 (equality_expression)


State 224

   76 equality_expression: equality_expression • EQ_OP relational_expression
   77                    | equality_expression • NE_OP relational_expression
   78 and_expression: equality_expression •

    EQ_OP  shift, and go to state 338
    NE_OP  shift, and go to state 339

    $default  reduce using rule 78 (and_expression)


State 225

   79 and_expression: and_expression • '&' equality_expression
   80 exclusive_or_expression: and_expression •

    '&'  shift, and go to state 340

    $default  reduce using rule 80 (exclusive_or_expression)


State 226

   81 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   82 inclusive_or_expression: exclusive_or_expression •

    '^'  shift, and go to state 341

    $default  reduce using rule 82 (inclusive_or_expression)


State 227

   83 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   84 logical_and_expression: inclusive_or_expression •

    '|'  shift, and go to state 342

    $default  reduce using rule 84 (logical_and_expression)


State 228

   85 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
   86 logical_xor_expression: logical_and_expression •

    AND_OP  shift, and go to state 343

    $default  reduce using rule 86 (logical_xor_expression)


State 229

   87 logical_xor_expression: logical_xor_expression • XOR_OP logical_and_expression
   88 logical_or_expression: logical_xor_expression •

    XOR_OP  shift, and go to state 344

    $default  reduce using rule 88 (logical_or_expression)


State 230

   89 logical_or_expression: logical_or_expression • OR_OP logical_xor_expression
   90 conditional_expression: logical_or_expression •
   91                       | logical_or_expression • '?' expression ':' assignment_expression

    OR_OP  shift, and go to state 345
    '?'    shift, and go to state 346

    $default  reduce using rule 90 (conditional_expression)


State 231

   92 assignment_expression: conditional_expression •

    $default  reduce using rule 92 (assignment_expression)


State 232

  105 expression: assignment_expression •

    $default  reduce using rule 105 (expression)


State 233

  106 expression: expression • ',' assignment_expression
  248 expression_statement: expression • ';'

    ','  shift, and go to state 347
    ';'  shift, and go to state 348


State 234

  227 declaration_statement: declaration •

    $default  reduce using rule 227 (declaration_statement)


State 235

  108 declaration: function_prototype • ';'

    ';'  shift, and go to state 121


State 236

   50 function_identifier: type_specifier •
  145 fully_specified_type: type_specifier •

    '('       reduce using rule 50 (function_identifier)
    $default  reduce using rule 145 (fully_specified_type)


State 237

  230 simple_statement: declaration_statement •

    $default  reduce using rule 230 (simple_statement)


State 238

  244 statement_list: statement •

    $default  reduce using rule 244 (statement_list)


State 239

  229 statement: simple_statement •

    $default  reduce using rule 229 (statement)


State 240

  228 statement: compound_statement •

    $default  reduce using rule 228 (statement)


State 241

  243 compound_statement_no_new_scope: '{' statement_list • '}'
  245 statement_list: statement_list • statement
  246               | statement_list • extension_statement

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    EXTENSION        shift, and go to state 12
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206
    '}'              shift, and go to state 349

    extension_statement                   go to state 350
    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 351
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 242

  231 simple_statement: expression_statement •

    $default  reduce using rule 231 (simple_statement)


State 243

  232 simple_statement: selection_statement •

    $default  reduce using rule 232 (simple_statement)


State 244

  233 simple_statement: switch_statement •

    $default  reduce using rule 233 (simple_statement)


State 245

  234 simple_statement: iteration_statement •

    $default  reduce using rule 234 (simple_statement)


State 246

  235 simple_statement: jump_statement •

    $default  reduce using rule 235 (simple_statement)


State 247

  236 simple_statement: demote_statement •

    $default  reduce using rule 236 (simple_statement)


State 248

  116 function_header_with_parameters: function_header_with_parameters ',' parameter_declaration •

    $default  reduce using rule 116 (function_header_with_parameters)


State 249

  124 parameter_qualifier: CONST_TOK parameter_qualifier •

    $default  reduce using rule 124 (parameter_qualifier)


State 250

  125 parameter_qualifier: PRECISE parameter_qualifier •

    $default  reduce using rule 125 (parameter_qualifier)


State 251

  121 parameter_declaration: parameter_qualifier parameter_declarator •

    $default  reduce using rule 121 (parameter_declaration)


State 252

  122 parameter_declaration: parameter_qualifier parameter_type_specifier •

    $default  reduce using rule 122 (parameter_declaration)


State 253

  119 parameter_declarator: layout_qualifier • type_specifier any_identifier

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    UNSIGNED         shift, and go to state 54

    type_specifier                 go to state 352
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    struct_specifier               go to state 79


State 254

  118 parameter_declarator: type_specifier • any_identifier
  120                     | type_specifier • any_identifier array_specifier
  132 parameter_type_specifier: type_specifier •

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    $default  reduce using rule 132 (parameter_type_specifier)

    any_identifier  go to state 353


State 255

  126 parameter_qualifier: parameter_direction_qualifier parameter_qualifier •

    $default  reduce using rule 126 (parameter_qualifier)


State 256

  128 parameter_qualifier: memory_qualifier parameter_qualifier •

    $default  reduce using rule 128 (parameter_qualifier)


State 257

  127 parameter_qualifier: precision_qualifier parameter_qualifier •

    $default  reduce using rule 127 (parameter_qualifier)


State 258

  134 init_declarator_list: init_declarator_list ',' any_identifier •
  135                     | init_declarator_list ',' any_identifier • array_specifier
  136                     | init_declarator_list ',' any_identifier • array_specifier '=' initializer
  137                     | init_declarator_list ',' any_identifier • '=' initializer

    '['  shift, and go to state 161
    '='  shift, and go to state 354

    $default  reduce using rule 134 (init_declarator_list)

    array_specifier  go to state 355


State 259

  142 single_declaration: fully_specified_type any_identifier '=' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 358


State 260

  140 single_declaration: fully_specified_type any_identifier array_specifier •
  141                   | fully_specified_type any_identifier array_specifier • '=' initializer
  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'

    '['  shift, and go to state 271
    '='  shift, and go to state 359

    $default  reduce using rule 140 (single_declaration)


State 261

  117 function_header: fully_specified_type variable_identifier '(' •

    $default  reduce using rule 117 (function_header)


State 262

  304 layout_buffer_defaults: layout_qualifier BUFFER ';' •

    $default  reduce using rule 304 (layout_buffer_defaults)


State 263

  306 layout_in_defaults: layout_qualifier IN_TOK ';' •

    $default  reduce using rule 306 (layout_in_defaults)


State 264

  308 layout_out_defaults: layout_qualifier OUT_TOK ';' •

    $default  reduce using rule 308 (layout_out_defaults)


State 265

  302 layout_uniform_defaults: layout_qualifier UNIFORM ';' •

    $default  reduce using rule 302 (layout_uniform_defaults)


State 266

  198 array_specifier: '[' ']' •

    $default  reduce using rule 198 (array_specifier)


State 267

   60 multiplicative_expression: unary_expression •

    $default  reduce using rule 60 (multiplicative_expression)


State 268

  107 constant_expression: conditional_expression •

    $default  reduce using rule 107 (constant_expression)


State 269

  199 array_specifier: '[' constant_expression • ']'

    ']'  shift, and go to state 360


State 270

   50 function_identifier: type_specifier •

    $default  reduce using rule 50 (function_identifier)


State 271

  200 array_specifier: array_specifier '[' • ']'
  201                | array_specifier '[' • constant_expression ']'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    ']'              shift, and go to state 361
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 268
    constant_expression                   go to state 362
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 272

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' • member_list '}' instance_name_opt ';'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56

    fully_specified_type           go to state 363
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    member_list                    go to state 364
    member_declaration             go to state 365


State 273

   18 extension_statement: EXTENSION any_identifier COLON any_identifier EOL •

    $default  reduce using rule 18 (extension_statement)


State 274

  220 struct_declarator: any_identifier •
  221                  | any_identifier • array_specifier

    '['  shift, and go to state 161

    $default  reduce using rule 220 (struct_declarator)

    array_specifier  go to state 366


State 275

  217 struct_declaration: fully_specified_type struct_declarator_list • ';'
  219 struct_declarator_list: struct_declarator_list • ',' struct_declarator

    ','  shift, and go to state 367
    ';'  shift, and go to state 368


State 276

  218 struct_declarator_list: struct_declarator •

    $default  reduce using rule 218 (struct_declarator_list)


State 277

  214 struct_specifier: STRUCT '{' struct_declaration_list '}' •

    $default  reduce using rule 214 (struct_specifier)


State 278

  216 struct_declaration_list: struct_declaration_list struct_declaration •

    $default  reduce using rule 216 (struct_declaration_list)


State 279

  213 struct_specifier: STRUCT any_identifier '{' struct_declaration_list • '}'
  216 struct_declaration_list: struct_declaration_list • struct_declaration

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '}'              shift, and go to state 369

    fully_specified_type           go to state 166
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    struct_declaration             go to state 278


State 280

  110 declaration: PRECISION precision_qualifier type_specifier ';' •

    $default  reduce using rule 110 (declaration)


State 281

  151 layout_qualifier_id: any_identifier '=' • constant_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 268
    constant_expression                   go to state 370
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 282

  147 layout_qualifier: LAYOUT_TOK '(' layout_qualifier_id_list ')' •

    $default  reduce using rule 147 (layout_qualifier)


State 283

  149 layout_qualifier_id_list: layout_qualifier_id_list ',' • layout_qualifier_id

    SHARED           shift, and go to state 171
    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9
    PACKED_TOK       shift, and go to state 172
    ROW_MAJOR        shift, and go to state 173

    any_identifier                    go to state 174
    layout_qualifier_id               go to state 371
    interface_block_layout_qualifier  go to state 177


State 284

  157 subroutine_qualifier: SUBROUTINE '(' subroutine_type_list ')' •

    $default  reduce using rule 157 (subroutine_qualifier)


State 285

  159 subroutine_type_list: subroutine_type_list ',' • any_identifier

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 372


State 286

  275 jump_statement: BREAK ';' •

    $default  reduce using rule 275 (jump_statement)


State 287

  274 jump_statement: CONTINUE ';' •

    $default  reduce using rule 274 (jump_statement)


State 288

  241 statement_no_new_scope: simple_statement •

    $default  reduce using rule 241 (statement_no_new_scope)


State 289

  266 iteration_statement: DO statement_no_new_scope • WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 373


State 290

  240 statement_no_new_scope: compound_statement_no_new_scope •

    $default  reduce using rule 240 (statement_no_new_scope)


State 291

  267 iteration_statement: FOR '(' • for_init_statement for_rest_statement ')' statement_no_new_scope

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 20
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 374
    expression_statement                  go to state 375
    for_init_statement                    go to state 376
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 292

  249 selection_statement: IF '(' • expression ')' selection_rest_statement

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 377
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 293

  279 demote_statement: DEMOTE ';' •

    $default  reduce using rule 279 (demote_statement)


State 294

  278 jump_statement: DISCARD ';' •

    $default  reduce using rule 278 (jump_statement)


State 295

  276 jump_statement: RETURN ';' •

    $default  reduce using rule 276 (jump_statement)


State 296

  106 expression: expression • ',' assignment_expression
  277 jump_statement: RETURN expression • ';'

    ','  shift, and go to state 347
    ';'  shift, and go to state 378


State 297

  254 switch_statement: SWITCH '(' • expression ')' switch_body

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 379
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 298

  265 iteration_statement: WHILE '(' • condition ')' statement_no_new_scope

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 380
    fully_specified_type                  go to state 381
    layout_qualifier                      go to state 102
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 104
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 105
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    condition                             go to state 382


State 299

   53 unary_expression: INC_OP unary_expression •

    $default  reduce using rule 53 (unary_expression)


State 300

   54 unary_expression: DEC_OP unary_expression •

    $default  reduce using rule 54 (unary_expression)


State 301

   33 primary_expression: '(' expression • ')'
  106 expression: expression • ',' assignment_expression

    ')'  shift, and go to state 383
    ','  shift, and go to state 347


State 302

  237 compound_statement: '{' '}' •

    $default  reduce using rule 237 (compound_statement)


State 303

  239 compound_statement: '{' $@2 • statement_list '}'

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 238
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    statement_list                        go to state 384
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 304

   38 postfix_expression: postfix_expression INC_OP •

    $default  reduce using rule 38 (postfix_expression)


State 305

   39 postfix_expression: postfix_expression DEC_OP •

    $default  reduce using rule 39 (postfix_expression)


State 306

   37 postfix_expression: postfix_expression DOT_TOK • FIELD_SELECTION

    FIELD_SELECTION  shift, and go to state 385


State 307

   35 postfix_expression: postfix_expression '[' • integer_expression ']'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    integer_expression                    go to state 386
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 387
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 308

   44 function_call_generic: function_call_header_no_parameters ')' •

    $default  reduce using rule 44 (function_call_generic)


State 309

   43 function_call_generic: function_call_header_with_parameters ')' •

    $default  reduce using rule 43 (function_call_generic)


State 310

   48 function_call_header_with_parameters: function_call_header_with_parameters ',' • assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 388
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 311

   45 function_call_header_no_parameters: function_call_header VOID_TOK •
  207 basic_type_specifier_nonarray: VOID_TOK •

    ')'       reduce using rule 45 (function_call_header_no_parameters)
    $default  reduce using rule 207 (basic_type_specifier_nonarray)


State 312

   47 function_call_header_with_parameters: function_call_header assignment_expression •

    $default  reduce using rule 47 (function_call_header_with_parameters)


State 313

   49 function_call_header: function_identifier '(' •

    $default  reduce using rule 49 (function_call_header)


State 314

   95 assignment_operator: MUL_ASSIGN •

    $default  reduce using rule 95 (assignment_operator)


State 315

   96 assignment_operator: DIV_ASSIGN •

    $default  reduce using rule 96 (assignment_operator)


State 316

   98 assignment_operator: ADD_ASSIGN •

    $default  reduce using rule 98 (assignment_operator)


State 317

   97 assignment_operator: MOD_ASSIGN •

    $default  reduce using rule 97 (assignment_operator)


State 318

  100 assignment_operator: LEFT_ASSIGN •

    $default  reduce using rule 100 (assignment_operator)


State 319

  101 assignment_operator: RIGHT_ASSIGN •

    $default  reduce using rule 101 (assignment_operator)


State 320

  102 assignment_operator: AND_ASSIGN •

    $default  reduce using rule 102 (assignment_operator)


State 321

  103 assignment_operator: XOR_ASSIGN •

    $default  reduce using rule 103 (assignment_operator)


State 322

  104 assignment_operator: OR_ASSIGN •

    $default  reduce using rule 104 (assignment_operator)


State 323

   99 assignment_operator: SUB_ASSIGN •

    $default  reduce using rule 99 (assignment_operator)


State 324

   94 assignment_operator: '=' •

    $default  reduce using rule 94 (assignment_operator)


State 325

   93 assignment_expression: unary_expression assignment_operator • assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 389
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 326

   55 unary_expression: unary_operator unary_expression •

    $default  reduce using rule 55 (unary_expression)


State 327

   61 multiplicative_expression: multiplicative_expression '*' • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 390
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 328

   62 multiplicative_expression: multiplicative_expression '/' • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 391
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 329

   63 multiplicative_expression: multiplicative_expression '%' • unary_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 392
    unary_operator                        go to state 219
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 330

   65 additive_expression: additive_expression '+' • multiplicative_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 393
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 331

   66 additive_expression: additive_expression '-' • multiplicative_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 394
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 332

   68 shift_expression: shift_expression LEFT_OP • additive_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 395
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 333

   69 shift_expression: shift_expression RIGHT_OP • additive_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 396
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 334

   73 relational_expression: relational_expression LE_OP • shift_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 397
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 335

   74 relational_expression: relational_expression GE_OP • shift_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 398
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 336

   71 relational_expression: relational_expression '<' • shift_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 399
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 337

   72 relational_expression: relational_expression '>' • shift_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 400
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 338

   76 equality_expression: equality_expression EQ_OP • relational_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 401
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 339

   77 equality_expression: equality_expression NE_OP • relational_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 402
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 340

   79 and_expression: and_expression '&' • equality_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 403
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 341

   81 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 404
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 342

   83 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 405
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 343

   85 logical_and_expression: logical_and_expression AND_OP • inclusive_or_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 406
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 344

   87 logical_xor_expression: logical_xor_expression XOR_OP • logical_and_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 407
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 345

   89 logical_or_expression: logical_or_expression OR_OP • logical_xor_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 267
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 408
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 346

   91 conditional_expression: logical_or_expression '?' • expression ':' assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 409
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 347

  106 expression: expression ',' • assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 410
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 348

  248 expression_statement: expression ';' •

    $default  reduce using rule 248 (expression_statement)


State 349

  243 compound_statement_no_new_scope: '{' statement_list '}' •

    $default  reduce using rule 243 (compound_statement_no_new_scope)


State 350

  246 statement_list: statement_list extension_statement •

    $default  reduce using rule 246 (statement_list)


State 351

  245 statement_list: statement_list statement •

    $default  reduce using rule 245 (statement_list)


State 352

  119 parameter_declarator: layout_qualifier type_specifier • any_identifier

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 411


State 353

  118 parameter_declarator: type_specifier any_identifier •
  120                     | type_specifier any_identifier • array_specifier

    '['  shift, and go to state 161

    $default  reduce using rule 118 (parameter_declarator)

    array_specifier  go to state 412


State 354

  137 init_declarator_list: init_declarator_list ',' any_identifier '=' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 413


State 355

  135 init_declarator_list: init_declarator_list ',' any_identifier array_specifier •
  136                     | init_declarator_list ',' any_identifier array_specifier • '=' initializer
  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'

    '['  shift, and go to state 271
    '='  shift, and go to state 414

    $default  reduce using rule 135 (init_declarator_list)


State 356

  223 initializer: '{' • initializer_list '}'
  224            | '{' • initializer_list ',' '}'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 415
    initializer_list                      go to state 416


State 357

  222 initializer: assignment_expression •

    $default  reduce using rule 222 (initializer)


State 358

  142 single_declaration: fully_specified_type any_identifier '=' initializer •

    $default  reduce using rule 142 (single_declaration)


State 359

  141 single_declaration: fully_specified_type any_identifier array_specifier '=' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 417


State 360

  199 array_specifier: '[' constant_expression ']' •

    $default  reduce using rule 199 (array_specifier)


State 361

  200 array_specifier: array_specifier '[' ']' •

    $default  reduce using rule 200 (array_specifier)


State 362

  201 array_specifier: array_specifier '[' constant_expression • ']'

    ']'  shift, and go to state 418


State 363

  300 member_declaration: fully_specified_type • struct_declarator_list ';'

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier          go to state 274
    struct_declarator_list  go to state 419
    struct_declarator       go to state 276


State 364

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' member_list • '}' instance_name_opt ';'

    '}'  shift, and go to state 420


State 365

  298 member_list: member_declaration •
  299            | member_declaration • member_list

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    TYPE_IDENTIFIER  shift, and go to state 39
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56

    $default  reduce using rule 298 (member_list)

    fully_specified_type           go to state 363
    layout_qualifier               go to state 102
    subroutine_qualifier           go to state 69
    interpolation_qualifier        go to state 70
    type_qualifier                 go to state 71
    auxiliary_storage_qualifier    go to state 104
    storage_qualifier              go to state 73
    memory_qualifier               go to state 105
    type_specifier                 go to state 75
    type_specifier_nonarray        go to state 76
    basic_type_specifier_nonarray  go to state 77
    precision_qualifier            go to state 78
    struct_specifier               go to state 79
    member_list                    go to state 421
    member_declaration             go to state 365


State 366

  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'
  221 struct_declarator: any_identifier array_specifier •

    '['  shift, and go to state 271

    $default  reduce using rule 221 (struct_declarator)


State 367

  219 struct_declarator_list: struct_declarator_list ',' • struct_declarator

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier     go to state 274
    struct_declarator  go to state 422


State 368

  217 struct_declaration: fully_specified_type struct_declarator_list ';' •

    $default  reduce using rule 217 (struct_declaration)


State 369

  213 struct_specifier: STRUCT any_identifier '{' struct_declaration_list '}' •

    $default  reduce using rule 213 (struct_specifier)


State 370

  151 layout_qualifier_id: any_identifier '=' constant_expression •

    $default  reduce using rule 151 (layout_qualifier_id)


State 371

  149 layout_qualifier_id_list: layout_qualifier_id_list ',' layout_qualifier_id •

    $default  reduce using rule 149 (layout_qualifier_id_list)


State 372

  159 subroutine_type_list: subroutine_type_list ',' any_identifier •

    $default  reduce using rule 159 (subroutine_type_list)


State 373

  266 iteration_statement: DO statement_no_new_scope WHILE • '(' expression ')' ';'

    '('  shift, and go to state 423


State 374

  269 for_init_statement: declaration_statement •

    $default  reduce using rule 269 (for_init_statement)


State 375

  268 for_init_statement: expression_statement •

    $default  reduce using rule 268 (for_init_statement)


State 376

  267 iteration_statement: FOR '(' for_init_statement • for_rest_statement ')' statement_no_new_scope

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BUFFER           shift, and go to state 93
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 94
    OUT_TOK          shift, and go to state 95
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 96
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 99
    PRECISE          shift, and go to state 100
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    $default  reduce using rule 271 (conditionopt)

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 380
    fully_specified_type                  go to state 381
    layout_qualifier                      go to state 102
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 104
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 105
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    condition                             go to state 424
    conditionopt                          go to state 425
    for_rest_statement                    go to state 426


State 377

  106 expression: expression • ',' assignment_expression
  249 selection_statement: IF '(' expression • ')' selection_rest_statement

    ')'  shift, and go to state 427
    ','  shift, and go to state 347


State 378

  277 jump_statement: RETURN expression ';' •

    $default  reduce using rule 277 (jump_statement)


State 379

  106 expression: expression • ',' assignment_expression
  254 switch_statement: SWITCH '(' expression • ')' switch_body

    ')'  shift, and go to state 428
    ','  shift, and go to state 347


State 380

  106 expression: expression • ',' assignment_expression
  252 condition: expression •

    ','  shift, and go to state 347

    $default  reduce using rule 252 (condition)


State 381

  253 condition: fully_specified_type • any_identifier '=' initializer

    IDENTIFIER       shift, and go to state 7
    TYPE_IDENTIFIER  shift, and go to state 8
    NEW_IDENTIFIER   shift, and go to state 9

    any_identifier  go to state 429


State 382

  265 iteration_statement: WHILE '(' condition • ')' statement_no_new_scope

    ')'  shift, and go to state 430


State 383

   33 primary_expression: '(' expression ')' •

    $default  reduce using rule 33 (primary_expression)


State 384

  239 compound_statement: '{' $@2 statement_list • '}'
  245 statement_list: statement_list • statement
  246               | statement_list • extension_statement

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    EXTENSION        shift, and go to state 12
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206
    '}'              shift, and go to state 431

    extension_statement                   go to state 350
    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 351
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 385

   37 postfix_expression: postfix_expression DOT_TOK FIELD_SELECTION •

    $default  reduce using rule 37 (postfix_expression)


State 386

   35 postfix_expression: postfix_expression '[' integer_expression • ']'

    ']'  shift, and go to state 432


State 387

   40 integer_expression: expression •
  106 expression: expression • ',' assignment_expression

    ','  shift, and go to state 347

    $default  reduce using rule 40 (integer_expression)


State 388

   48 function_call_header_with_parameters: function_call_header_with_parameters ',' assignment_expression •

    $default  reduce using rule 48 (function_call_header_with_parameters)


State 389

   93 assignment_expression: unary_expression assignment_operator assignment_expression •

    $default  reduce using rule 93 (assignment_expression)


State 390

   61 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  reduce using rule 61 (multiplicative_expression)


State 391

   62 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  reduce using rule 62 (multiplicative_expression)


State 392

   63 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  reduce using rule 63 (multiplicative_expression)


State 393

   61 multiplicative_expression: multiplicative_expression • '*' unary_expression
   62                          | multiplicative_expression • '/' unary_expression
   63                          | multiplicative_expression • '%' unary_expression
   65 additive_expression: additive_expression '+' multiplicative_expression •

    '*'  shift, and go to state 327
    '/'  shift, and go to state 328
    '%'  shift, and go to state 329

    $default  reduce using rule 65 (additive_expression)


State 394

   61 multiplicative_expression: multiplicative_expression • '*' unary_expression
   62                          | multiplicative_expression • '/' unary_expression
   63                          | multiplicative_expression • '%' unary_expression
   66 additive_expression: additive_expression '-' multiplicative_expression •

    '*'  shift, and go to state 327
    '/'  shift, and go to state 328
    '%'  shift, and go to state 329

    $default  reduce using rule 66 (additive_expression)


State 395

   65 additive_expression: additive_expression • '+' multiplicative_expression
   66                    | additive_expression • '-' multiplicative_expression
   68 shift_expression: shift_expression LEFT_OP additive_expression •

    '+'  shift, and go to state 330
    '-'  shift, and go to state 331

    $default  reduce using rule 68 (shift_expression)


State 396

   65 additive_expression: additive_expression • '+' multiplicative_expression
   66                    | additive_expression • '-' multiplicative_expression
   69 shift_expression: shift_expression RIGHT_OP additive_expression •

    '+'  shift, and go to state 330
    '-'  shift, and go to state 331

    $default  reduce using rule 69 (shift_expression)


State 397

   68 shift_expression: shift_expression • LEFT_OP additive_expression
   69                 | shift_expression • RIGHT_OP additive_expression
   73 relational_expression: relational_expression LE_OP shift_expression •

    LEFT_OP   shift, and go to state 332
    RIGHT_OP  shift, and go to state 333

    $default  reduce using rule 73 (relational_expression)


State 398

   68 shift_expression: shift_expression • LEFT_OP additive_expression
   69                 | shift_expression • RIGHT_OP additive_expression
   74 relational_expression: relational_expression GE_OP shift_expression •

    LEFT_OP   shift, and go to state 332
    RIGHT_OP  shift, and go to state 333

    $default  reduce using rule 74 (relational_expression)


State 399

   68 shift_expression: shift_expression • LEFT_OP additive_expression
   69                 | shift_expression • RIGHT_OP additive_expression
   71 relational_expression: relational_expression '<' shift_expression •

    LEFT_OP   shift, and go to state 332
    RIGHT_OP  shift, and go to state 333

    $default  reduce using rule 71 (relational_expression)


State 400

   68 shift_expression: shift_expression • LEFT_OP additive_expression
   69                 | shift_expression • RIGHT_OP additive_expression
   72 relational_expression: relational_expression '>' shift_expression •

    LEFT_OP   shift, and go to state 332
    RIGHT_OP  shift, and go to state 333

    $default  reduce using rule 72 (relational_expression)


State 401

   71 relational_expression: relational_expression • '<' shift_expression
   72                      | relational_expression • '>' shift_expression
   73                      | relational_expression • LE_OP shift_expression
   74                      | relational_expression • GE_OP shift_expression
   76 equality_expression: equality_expression EQ_OP relational_expression •

    LE_OP  shift, and go to state 334
    GE_OP  shift, and go to state 335
    '<'    shift, and go to state 336
    '>'    shift, and go to state 337

    $default  reduce using rule 76 (equality_expression)


State 402

   71 relational_expression: relational_expression • '<' shift_expression
   72                      | relational_expression • '>' shift_expression
   73                      | relational_expression • LE_OP shift_expression
   74                      | relational_expression • GE_OP shift_expression
   77 equality_expression: equality_expression NE_OP relational_expression •

    LE_OP  shift, and go to state 334
    GE_OP  shift, and go to state 335
    '<'    shift, and go to state 336
    '>'    shift, and go to state 337

    $default  reduce using rule 77 (equality_expression)


State 403

   76 equality_expression: equality_expression • EQ_OP relational_expression
   77                    | equality_expression • NE_OP relational_expression
   79 and_expression: and_expression '&' equality_expression •

    EQ_OP  shift, and go to state 338
    NE_OP  shift, and go to state 339

    $default  reduce using rule 79 (and_expression)


State 404

   79 and_expression: and_expression • '&' equality_expression
   81 exclusive_or_expression: exclusive_or_expression '^' and_expression •

    '&'  shift, and go to state 340

    $default  reduce using rule 81 (exclusive_or_expression)


State 405

   81 exclusive_or_expression: exclusive_or_expression • '^' and_expression
   83 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •

    '^'  shift, and go to state 341

    $default  reduce using rule 83 (inclusive_or_expression)


State 406

   83 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression
   85 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression •

    '|'  shift, and go to state 342

    $default  reduce using rule 85 (logical_and_expression)


State 407

   85 logical_and_expression: logical_and_expression • AND_OP inclusive_or_expression
   87 logical_xor_expression: logical_xor_expression XOR_OP logical_and_expression •

    AND_OP  shift, and go to state 343

    $default  reduce using rule 87 (logical_xor_expression)


State 408

   87 logical_xor_expression: logical_xor_expression • XOR_OP logical_and_expression
   89 logical_or_expression: logical_or_expression OR_OP logical_xor_expression •

    XOR_OP  shift, and go to state 344

    $default  reduce using rule 89 (logical_or_expression)


State 409

   91 conditional_expression: logical_or_expression '?' expression • ':' assignment_expression
  106 expression: expression • ',' assignment_expression

    ','  shift, and go to state 347
    ':'  shift, and go to state 433


State 410

  106 expression: expression ',' assignment_expression •

    $default  reduce using rule 106 (expression)


State 411

  119 parameter_declarator: layout_qualifier type_specifier any_identifier •

    $default  reduce using rule 119 (parameter_declarator)


State 412

  120 parameter_declarator: type_specifier any_identifier array_specifier •
  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'

    '['  shift, and go to state 271

    $default  reduce using rule 120 (parameter_declarator)


State 413

  137 init_declarator_list: init_declarator_list ',' any_identifier '=' initializer •

    $default  reduce using rule 137 (init_declarator_list)


State 414

  136 init_declarator_list: init_declarator_list ',' any_identifier array_specifier '=' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 434


State 415

  225 initializer_list: initializer •

    $default  reduce using rule 225 (initializer_list)


State 416

  223 initializer: '{' initializer_list • '}'
  224            | '{' initializer_list • ',' '}'
  226 initializer_list: initializer_list • ',' initializer

    ','  shift, and go to state 435
    '}'  shift, and go to state 436


State 417

  141 single_declaration: fully_specified_type any_identifier array_specifier '=' initializer •

    $default  reduce using rule 141 (single_declaration)


State 418

  201 array_specifier: array_specifier '[' constant_expression ']' •

    $default  reduce using rule 201 (array_specifier)


State 419

  219 struct_declarator_list: struct_declarator_list • ',' struct_declarator
  300 member_declaration: fully_specified_type struct_declarator_list • ';'

    ','  shift, and go to state 367
    ';'  shift, and go to state 437


State 420

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' member_list '}' • instance_name_opt ';'

    NEW_IDENTIFIER  shift, and go to state 438

    $default  reduce using rule 295 (instance_name_opt)

    instance_name_opt  go to state 439


State 421

  299 member_list: member_declaration member_list •

    $default  reduce using rule 299 (member_list)


State 422

  219 struct_declarator_list: struct_declarator_list ',' struct_declarator •

    $default  reduce using rule 219 (struct_declarator_list)


State 423

  266 iteration_statement: DO statement_no_new_scope WHILE '(' • expression ')' ';'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 440
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 424

  270 conditionopt: condition •

    $default  reduce using rule 270 (conditionopt)


State 425

  272 for_rest_statement: conditionopt • ';'
  273                   | conditionopt • ';' expression

    ';'  shift, and go to state 441


State 426

  267 iteration_statement: FOR '(' for_init_statement for_rest_statement • ')' statement_no_new_scope

    ')'  shift, and go to state 442


State 427

  249 selection_statement: IF '(' expression ')' • selection_rest_statement

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 443
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    selection_rest_statement              go to state 444
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 428

  254 switch_statement: SWITCH '(' expression ')' • switch_body

    '{'  shift, and go to state 445

    switch_body  go to state 446


State 429

  253 condition: fully_specified_type any_identifier • '=' initializer

    '='  shift, and go to state 447


State 430

  265 iteration_statement: WHILE '(' condition ')' • statement_no_new_scope

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 122

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    simple_statement                      go to state 288
    statement_no_new_scope                go to state 448
    compound_statement_no_new_scope       go to state 290
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 431

  239 compound_statement: '{' $@2 statement_list '}' •

    $default  reduce using rule 239 (compound_statement)


State 432

   35 postfix_expression: postfix_expression '[' integer_expression ']' •

    $default  reduce using rule 35 (postfix_expression)


State 433

   91 conditional_expression: logical_or_expression '?' expression ':' • assignment_expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 449
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 434

  136 init_declarator_list: init_declarator_list ',' any_identifier array_specifier '=' initializer •

    $default  reduce using rule 136 (init_declarator_list)


State 435

  224 initializer: '{' initializer_list ',' • '}'
  226 initializer_list: initializer_list ',' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356
    '}'              shift, and go to state 450

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 451


State 436

  223 initializer: '{' initializer_list '}' •

    $default  reduce using rule 223 (initializer)


State 437

  300 member_declaration: fully_specified_type struct_declarator_list ';' •

    $default  reduce using rule 300 (member_declaration)


State 438

  296 instance_name_opt: NEW_IDENTIFIER •
  297                  | NEW_IDENTIFIER • array_specifier

    '['  shift, and go to state 161

    $default  reduce using rule 296 (instance_name_opt)

    array_specifier  go to state 452


State 439

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' member_list '}' instance_name_opt • ';'

    ';'  shift, and go to state 453


State 440

  106 expression: expression • ',' assignment_expression
  266 iteration_statement: DO statement_no_new_scope WHILE '(' expression • ')' ';'

    ')'  shift, and go to state 454
    ','  shift, and go to state 347


State 441

  272 for_rest_statement: conditionopt ';' •
  273                   | conditionopt ';' • expression

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    $default  reduce using rule 272 (for_rest_statement)

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 455
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 442

  267 iteration_statement: FOR '(' for_init_statement for_rest_statement ')' • statement_no_new_scope

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 122

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    simple_statement                      go to state 288
    statement_no_new_scope                go to state 456
    compound_statement_no_new_scope       go to state 290
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 443

  250 selection_rest_statement: statement • ELSE statement
  251                         | statement •

    ELSE  shift, and go to state 457

    $default  reduce using rule 251 (selection_rest_statement)


State 444

  249 selection_statement: IF '(' expression ')' selection_rest_statement •

    $default  reduce using rule 249 (selection_statement)


State 445

  255 switch_body: '{' • '}'
  256            | '{' • case_statement_list '}'

    CASE     shift, and go to state 458
    DEFAULT  shift, and go to state 459
    '}'      shift, and go to state 460

    case_label           go to state 461
    case_label_list      go to state 462
    case_statement       go to state 463
    case_statement_list  go to state 464


State 446

  254 switch_statement: SWITCH '(' expression ')' switch_body •

    $default  reduce using rule 254 (switch_statement)


State 447

  253 condition: fully_specified_type any_identifier '=' • initializer

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    '{'              shift, and go to state 356

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 357
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79
    initializer                           go to state 465


State 448

  265 iteration_statement: WHILE '(' condition ')' statement_no_new_scope •

    $default  reduce using rule 265 (iteration_statement)


State 449

   91 conditional_expression: logical_or_expression '?' expression ':' assignment_expression •

    $default  reduce using rule 91 (conditional_expression)


State 450

  224 initializer: '{' initializer_list ',' '}' •

    $default  reduce using rule 224 (initializer)


State 451

  226 initializer_list: initializer_list ',' initializer •

    $default  reduce using rule 226 (initializer_list)


State 452

  200 array_specifier: array_specifier • '[' ']'
  201                | array_specifier • '[' constant_expression ']'
  297 instance_name_opt: NEW_IDENTIFIER array_specifier •

    '['  shift, and go to state 271

    $default  reduce using rule 297 (instance_name_opt)


State 453

  289 basic_interface_block: interface_qualifier NEW_IDENTIFIER '{' member_list '}' instance_name_opt ';' •

    $default  reduce using rule 289 (basic_interface_block)


State 454

  266 iteration_statement: DO statement_no_new_scope WHILE '(' expression ')' • ';'

    ';'  shift, and go to state 466


State 455

  106 expression: expression • ',' assignment_expression
  273 for_rest_statement: conditionopt ';' expression •

    ','  shift, and go to state 347

    $default  reduce using rule 273 (for_rest_statement)


State 456

  267 iteration_statement: FOR '(' for_init_statement for_rest_statement ')' statement_no_new_scope •

    $default  reduce using rule 267 (iteration_statement)


State 457

  250 selection_rest_statement: statement ELSE • statement

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 467
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 458

  257 case_label: CASE • expression ':'

    BASIC_TYPE_TOK   shift, and go to state 19
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    UNSIGNED         shift, and go to state 54
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 468
    type_specifier                        go to state 270
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    struct_specifier                      go to state 79


State 459

  258 case_label: DEFAULT • ':'

    ':'  shift, and go to state 469


State 460

  255 switch_body: '{' '}' •

    $default  reduce using rule 255 (switch_body)


State 461

  259 case_label_list: case_label •

    $default  reduce using rule 259 (case_label_list)


State 462

  260 case_label_list: case_label_list • case_label
  261 case_statement: case_label_list • statement

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CASE             shift, and go to state 458
    DEFAULT          shift, and go to state 459
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 470
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    case_label                            go to state 471
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 463

  262 case_statement: case_statement • statement
  263 case_statement_list: case_statement •

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    $default  reduce using rule 263 (case_statement_list)

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 472
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 464

  256 switch_body: '{' case_statement_list • '}'
  264 case_statement_list: case_statement_list • case_statement

    CASE     shift, and go to state 458
    DEFAULT  shift, and go to state 459
    '}'      shift, and go to state 473

    case_label       go to state 461
    case_label_list  go to state 462
    case_statement   go to state 474


State 465

  253 condition: fully_specified_type any_identifier '=' initializer •

    $default  reduce using rule 253 (condition)


State 466

  266 iteration_statement: DO statement_no_new_scope WHILE '(' expression ')' ';' •

    $default  reduce using rule 266 (iteration_statement)


State 467

  250 selection_rest_statement: statement ELSE statement •

    $default  reduce using rule 250 (selection_rest_statement)


State 468

  106 expression: expression • ',' assignment_expression
  257 case_label: CASE expression • ':'

    ','  shift, and go to state 347
    ':'  shift, and go to state 475


State 469

  258 case_label: DEFAULT ':' •

    $default  reduce using rule 258 (case_label)


State 470

  261 case_statement: case_label_list statement •

    $default  reduce using rule 261 (case_statement)


State 471

  260 case_label_list: case_label_list case_label •

    $default  reduce using rule 260 (case_label_list)


State 472

  262 case_statement: case_statement statement •

    $default  reduce using rule 262 (case_statement)


State 473

  256 switch_body: '{' case_statement_list '}' •

    $default  reduce using rule 256 (switch_body)


State 474

  262 case_statement: case_statement • statement
  264 case_statement_list: case_statement_list case_statement •

    ATTRIBUTE        shift, and go to state 17
    CONST_TOK        shift, and go to state 18
    BASIC_TYPE_TOK   shift, and go to state 19
    BREAK            shift, and go to state 180
    BUFFER           shift, and go to state 20
    CONTINUE         shift, and go to state 181
    DO               shift, and go to state 182
    FOR              shift, and go to state 183
    IF               shift, and go to state 184
    DEMOTE           shift, and go to state 185
    DISCARD          shift, and go to state 186
    RETURN           shift, and go to state 187
    SWITCH           shift, and go to state 188
    CENTROID         shift, and go to state 21
    IN_TOK           shift, and go to state 22
    OUT_TOK          shift, and go to state 23
    INOUT_TOK        shift, and go to state 24
    UNIFORM          shift, and go to state 25
    VARYING          shift, and go to state 26
    SAMPLE           shift, and go to state 27
    NOPERSPECTIVE    shift, and go to state 28
    FLAT             shift, and go to state 29
    SMOOTH           shift, and go to state 30
    COHERENT         shift, and go to state 31
    VOLATILE         shift, and go to state 32
    RESTRICT         shift, and go to state 33
    READONLY         shift, and go to state 34
    WRITEONLY        shift, and go to state 35
    SHARED           shift, and go to state 36
    STRUCT           shift, and go to state 37
    VOID_TOK         shift, and go to state 38
    WHILE            shift, and go to state 189
    IDENTIFIER       shift, and go to state 97
    TYPE_IDENTIFIER  shift, and go to state 39
    NEW_IDENTIFIER   shift, and go to state 98
    FLOATCONSTANT    shift, and go to state 190
    FLOAT16CONSTANT  shift, and go to state 191
    DOUBLECONSTANT   shift, and go to state 192
    INTCONSTANT      shift, and go to state 193
    UINTCONSTANT     shift, and go to state 194
    BOOLCONSTANT     shift, and go to state 195
    INT64CONSTANT    shift, and go to state 196
    UINT64CONSTANT   shift, and go to state 197
    INC_OP           shift, and go to state 198
    DEC_OP           shift, and go to state 199
    INVARIANT        shift, and go to state 40
    PRECISE          shift, and go to state 41
    LOWP             shift, and go to state 42
    MEDIUMP          shift, and go to state 43
    HIGHP            shift, and go to state 44
    PRECISION        shift, and go to state 45
    LAYOUT_TOK       shift, and go to state 53
    UNSIGNED         shift, and go to state 54
    PATCH            shift, and go to state 55
    SUBROUTINE       shift, and go to state 56
    '('              shift, and go to state 200
    '+'              shift, and go to state 201
    '-'              shift, and go to state 202
    '!'              shift, and go to state 203
    '~'              shift, and go to state 204
    ';'              shift, and go to state 205
    '{'              shift, and go to state 206

    $default  reduce using rule 264 (case_statement_list)

    variable_identifier                   go to state 208
    primary_expression                    go to state 209
    postfix_expression                    go to state 210
    function_call                         go to state 211
    function_call_or_method               go to state 212
    function_call_generic                 go to state 213
    function_call_header_no_parameters    go to state 214
    function_call_header_with_parameters  go to state 215
    function_call_header                  go to state 216
    function_identifier                   go to state 217
    unary_expression                      go to state 218
    unary_operator                        go to state 219
    multiplicative_expression             go to state 220
    additive_expression                   go to state 221
    shift_expression                      go to state 222
    relational_expression                 go to state 223
    equality_expression                   go to state 224
    and_expression                        go to state 225
    exclusive_or_expression               go to state 226
    inclusive_or_expression               go to state 227
    logical_and_expression                go to state 228
    logical_xor_expression                go to state 229
    logical_or_expression                 go to state 230
    conditional_expression                go to state 231
    assignment_expression                 go to state 232
    expression                            go to state 233
    declaration                           go to state 234
    function_prototype                    go to state 235
    function_declarator                   go to state 62
    function_header_with_parameters       go to state 63
    function_header                       go to state 64
    init_declarator_list                  go to state 65
    single_declaration                    go to state 66
    fully_specified_type                  go to state 67
    layout_qualifier                      go to state 158
    subroutine_qualifier                  go to state 69
    interpolation_qualifier               go to state 70
    type_qualifier                        go to state 71
    auxiliary_storage_qualifier           go to state 72
    storage_qualifier                     go to state 73
    memory_qualifier                      go to state 74
    type_specifier                        go to state 236
    type_specifier_nonarray               go to state 76
    basic_type_specifier_nonarray         go to state 77
    precision_qualifier                   go to state 78
    struct_specifier                      go to state 79
    declaration_statement                 go to state 237
    statement                             go to state 472
    simple_statement                      go to state 239
    compound_statement                    go to state 240
    expression_statement                  go to state 242
    selection_statement                   go to state 243
    switch_statement                      go to state 244
    iteration_statement                   go to state 245
    jump_statement                        go to state 246
    demote_statement                      go to state 247
    interface_block                       go to state 82
    basic_interface_block                 go to state 83
    interface_qualifier                   go to state 84


State 475

  257 case_label: CASE expression ':' •

    $default  reduce using rule 257 (case_label)
